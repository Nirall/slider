!function(e){var t={};function i(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,i),o.l=!0,o.exports}i.m=e,i.c=t,i.d=function(e,t,n){i.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},i.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.t=function(e,t){if(1&t&&(e=i(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(i.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)i.d(n,o,function(t){return e[t]}.bind(null,o));return n},i.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(t,"a",t),t},i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},i.p="",i(i.s=14)}([function(e,t,i){"use strict";i.r(t),t.default=function(e){var t=document.createElement("div");return t.ondragstart=function(){return!1},t.classList.add(e),t}},function(e,t,i){"use strict";i.r(t);var n=function(){for(var e=0,t=0,i=arguments.length;t<i;t++)e+=arguments[t].length;var n=Array(e),o=0;for(t=0;t<i;t++)for(var s=arguments[t],a=0,r=s.length;a<r;a++,o++)n[o]=s[a];return n},o=function(){function e(){this.observers=[]}return e.prototype.addObserver=function(e){if("function"!=typeof e)throw new Error("observer must be a function");this.observers.map((function(t){if(t===e)throw new Error("observer already in the list")})),this.observers.push(e)},e.prototype.removeObserver=function(e){for(var t=0;t<this.observers.length;t++){if(this.observers[t]===e)return void this.observers.splice(t,1)}throw new Error("could not find observer in list of observers")},e.prototype.notifyObservers=function(){n(this.observers).map((function(e){return e()}))},e}();t.default=o},function(e,t,i){"use strict";i.r(t);var n=i(0),o=function(e){var t=this;this.getWidth=function(){return t.elem.getBoundingClientRect().width},this.getPosition=function(){return t.isVertical?t.elem.getBoundingClientRect().top:t.elem.getBoundingClientRect().left},this.setPosition=function(e){t.isVertical?(t.elem.style.left="50%",t.elem.style.top=e+"px"):(t.elem.style.top="50%",t.elem.style.left=e+"px")},this.init=function(e){t.isVertical=e,t.isVertical?t.elem.classList.add("slider__button_position_vertical"):t.elem.classList.remove("slider__button_position_vertical")},this.elem=Object(n.default)("slider__button"),this.isVertical=e};t.default=o},function(e,t,i){"use strict";i.r(t);var n=i(0),o=function(e){var t=this;this.getPosition=function(){return t.isVertical?t.elem.getBoundingClientRect().top:t.elem.getBoundingClientRect().left},this.setPosition=function(e,i){t.elem.innerHTML=i+"",t.isVertical?(t.elem.style.left="50%",t.elem.style.top=e-t.getDimension()/2+"px"):(t.elem.style.top="50%",t.elem.style.left=e-t.getDimension()/2+"px")},this.getDimension=function(){return t.isVertical?t.elem.getBoundingClientRect().height:t.elem.getBoundingClientRect().width},this.init=function(e){t.isVertical=e,t.isVertical?t.elem.classList.add("slider__button-label_position_vertical"):t.elem.classList.remove("slider__button-label_position_vertical")},this.elem=Object(n.default)("slider__button-label"),this.isVertical=e};t.default=o},function(e,t,i){"use strict";i.r(t);var n=i(0),o=function(e){var t=this;this.getPosition=function(){return t.isVertical?t.elem.getBoundingClientRect().top:t.elem.getBoundingClientRect().left},this.getDimension=function(){return t.isVertical?t.elem.getBoundingClientRect().height:t.elem.getBoundingClientRect().width},this.init=function(e){t.isVertical=e,t.isVertical?t.elem.classList.add("slider__scale_position_vertical"):t.elem.classList.remove("slider__scale_position_vertical")},this.elem=Object(n.default)("slider__scale"),this.isVertical=e};t.default=o},function(e,t,i){"use strict";i.r(t);var n=i(0),o=function(){var e=this;this.init=function(t,i,n,o){void 0===o&&(o=!1),e.mark1.innerHTML=t+"",e.mark4.innerHTML=i+"",o?(e.mark2.innerHTML=(t+(i-t)/3).toFixed(2),e.mark3.innerHTML=(t+2*(i-t)/3).toFixed(2)):(e.mark2.innerHTML=t+Math.round((i-t)/3)+"",e.mark3.innerHTML=t+Math.round(2*(i-t)/3)+""),n?(e.mark1.classList.remove("slider__graduation-mark_offset_left"),e.mark1.classList.add("slider__graduation-mark_offset_top"),e.mark4.classList.remove("slider__graduation-mark_offset_right"),e.mark4.classList.add("slider__graduation-mark_offset_bottom"),e.gradElem.classList.add("slider__graduation_position_vertical")):(e.mark1.classList.add("slider__graduation-mark_offset_left"),e.mark1.classList.remove("slider__graduation-mark_offset_top"),e.mark4.classList.add("slider__graduation-mark_offset_right"),e.mark4.classList.remove("slider__graduation-mark_offset_bottom"),e.gradElem.classList.remove("slider__graduation_position_vertical"))},this.gradElem=Object(n.default)("slider__graduation"),this.mark1=Object(n.default)("slider__graduation-mark"),this.mark2=Object(n.default)("slider__graduation-mark"),this.mark3=Object(n.default)("slider__graduation-mark"),this.mark4=Object(n.default)("slider__graduation-mark"),this.gradElem.appendChild(this.mark1),this.gradElem.appendChild(this.mark2),this.gradElem.appendChild(this.mark3),this.gradElem.appendChild(this.mark4)};t.default=o},function(e,t,i){"use strict";i.r(t);var n=i(0),o=function(e){var t=this;this.setPosition=function(e){t.isVertical?(t.elem.style.left="0",t.elem.style.width="100%",t.elem.style.top=e+"px"):(t.elem.style.top="0",t.elem.style.height="100%",t.elem.style.left=e+"px")},this.setDimension=function(e){t.isVertical?t.elem.style.height=e+"px":t.elem.style.width=e+"px"},this.init=function(e){t.isVertical=e},this.elem=Object(n.default)("slider__scale-filling"),this.isVertical=e};t.default=o},function(e,t,i){"use strict";i.r(t);var n=i(8),o=i(10),s=i(1),a=function(e,t,i,a,r,l,u){var c=this;void 0===e&&(e=0),void 0===t&&(t=1e3),void 0===i&&(i=1),void 0===a&&(a=!1),void 0===r&&(r=!1),void 0===l&&(l=!1),void 0===u&&(u=!1),this.append=function(e){c.view.append(e.get(0)),c.view.init()},this.update=function(e){Object.keys(e).map((function(t){void 0!==c.view[t]&&(c.view[t]=e[t])})),c.view.init(),c.view.butt1Move(c.view.butt1OffsetCheck(c.view.offsetValueConv(c.model.curMinValue))[0],c.model.curMinValue),c.view.butt2Move(c.view.butt2OffsetCheck(c.view.offsetValueConv(c.model.curMaxValue))[0],c.model.curMaxValue)},this.getValues=function(){return[c.model.curMinValue,c.model.curMaxValue]},this.setValues=function(e,t){e&&c.model.setCurMinValue(e),t&&c.model.setCurMaxValue(t)},this.getConfig=function(){return{minValue:c.view.minValue,maxValue:c.view.maxValue,step:c.view.step,isRange:c.view.isRange,isVertical:c.view.isVertical,showLabel:c.view.showLabel,isFloat:c.view.isFloat}},this.addObserver=function(e){c.observers.addObserver(e)},this.view=new n.View(e,t,i,a,r,l,u),this.model=new o.default(e,t),this.observers=new s.default,this.view.observers.addObserver((function(){c.model.curMinValue=c.view.curMinValue,c.model.curMaxValue=c.view.curMaxValue,c.observers.notifyObservers()})),this.model.observers.addObserver((function(){var e=c.model.curMinValue,t=c.model.curMaxValue;c.view.butt1Move(c.view.offsetValueConv(e),e),c.view.butt2Move(c.view.offsetValueConv(t),t),c.observers.notifyObservers()}))};t.default=a},function(e,t,i){"use strict";i.r(t),i.d(t,"View",(function(){return d}));var n=i(1),o=i(0);i.d(t,"createElem",(function(){return o.default}));var s=i(4);i.d(t,"Scale",(function(){return s.default}));var a=i(5);i.d(t,"Graduation",(function(){return a.default}));var r=i(2);i.d(t,"Button",(function(){return r.default}));var l=i(3);i.d(t,"Label",(function(){return l.default}));var u=i(6);i.d(t,"ScaleFilling",(function(){return u.default}));var c=i(9),d=function(){function e(e,t,i,o,d,f,m){var h=this;void 0===e&&(e=0),void 0===t&&(t=1e3),void 0===i&&(i=1),void 0===o&&(o=!1),void 0===d&&(d=!1),void 0===f&&(f=!1),void 0===m&&(m=!1),this.getStart=function(){return h.isRange?h.button1.getPosition()-h.scale.getPosition()+h.button1.getWidth()/2:0},this.getEnd=function(){return h.button2.getPosition()-h.scale.getPosition()+h.button2.getWidth()/2},this.updateElems=function(){h.scaleFilling.init(h.isVertical),h.scaleFilling.setPosition(h.getStart()),h.scaleFilling.setDimension(h.getEnd()-h.getStart()),h.isRange||(h.curMinValue=h.minValue),h.observers.notifyObservers()},this.round=function(e,t){var i=Math.trunc(e/t),n=e%t;return e<0?Math.abs(n)<t/2?i*t:(i-1)*t:e<=h.minValue?h.minValue:e>=h.maxValue?h.maxValue:n<t/2?i*t:(i+1)*t},this.roundOffsetButt=function(e){var t=h.minValue+(e+h.button2.getWidth()/2)*(h.maxValue-h.minValue)/h.scale.getDimension(),i=h.round(t,h.step);return h.isFloat&&(i=parseFloat(i.toFixed(2))),[h.offsetValueConv(i),i]},this.offsetValueConv=function(e){return(e-h.minValue)/(h.maxValue-h.minValue)*h.scale.getDimension()-h.button2.getWidth()/2},this.butt1Move=function(e,t){h.button1.setPosition(e),h.label1.setPosition(e+h.button1.getWidth()/2,t),t<h.minValue&&(t=h.minValue),h.curMinValue=t,h.updateElems()},this.butt1OffsetCheck=function(e){var t;e<-h.button1.getWidth()/2&&(e=-h.button1.getWidth()/2,t=h.minValue);var i=h.step*h.scale.getDimension()/(h.maxValue-h.minValue),n=i/1.5>h.button1.getWidth()?i/1.5:h.button1.getWidth();return e>h.button2.getPosition()-h.scale.getPosition()-n&&(e=h.button2.getPosition()-h.scale.getPosition()-n),[e,t]},this.onMouseMove1=function(e){var t,i,n,o,s=(h.isVertical?e.clientY:e.clientX)-h.scale.getPosition()-h.button2.getWidth()/2;o=(t=h.butt1OffsetCheck(s))[0],void 0===(n=t[1])&&(o=(i=h.roundOffsetButt(o))[0],n=i[1]),h.butt1Move(o,n)},this.onMouseUp1=function(){document.removeEventListener("mouseup",h.onMouseUp1),document.removeEventListener("mousemove",h.onMouseMove1)},this.butt2Move=function(e,t){h.button2.setPosition(e),h.label2.setPosition(e+h.button2.getWidth()/2,t),t<h.minValue?t=h.minValue:t>h.maxValue&&(t=h.maxValue),h.curMaxValue=t,h.updateElems()},this.butt2OffsetCheck=function(e){var t;h.isRange||e<-h.button2.getWidth()/2&&(e=-h.button2.getWidth()/2,t=h.minValue),e>h.scale.getDimension()-h.button2.getWidth()/2&&(e=h.scale.getDimension()-h.button2.getWidth()/2,t=h.maxValue);var i=h.step*h.scale.getDimension()/(h.maxValue-h.minValue),n=i/1.5>h.button1.getWidth()?i/1.5:h.button1.getWidth();return e<h.button1.getPosition()-h.scale.getPosition()+n&&(e=h.button1.getPosition()-h.scale.getPosition()+n),[e,t]},this.onMouseMove2=function(e){var t,i,n,o,s=(h.isVertical?e.clientY:e.clientX)-h.scale.getPosition()-h.button2.getWidth()/2;o=(t=h.butt2OffsetCheck(s))[0],void 0===(n=t[1])&&(o=(i=h.roundOffsetButt(o))[0],n=i[1]),h.butt2Move(o,n)},this.onMouseUp2=function(){document.removeEventListener("mouseup",h.onMouseUp2),document.removeEventListener("mousemove",h.onMouseMove2)},this.butt1CloserCheck=function(e){return Math.abs(e-h.button1.getPosition()-h.button1.getWidth()/2)<Math.abs(e-h.button2.getPosition()-h.button2.getWidth()/2)},this.scaleOnclick=function(e){if(h.isRange){var t=h.isVertical?e.clientY:e.clientX;h.butt1CloserCheck(t)?h.onMouseMove1(e):h.onMouseMove2(e)}else h.onMouseMove2(e)},this.interMarkHandler=function(e){var t,i,n,o=(e-h.minValue)/(h.maxValue-h.minValue)*h.scale.getDimension();if(i=(t=h.roundOffsetButt(o-h.button2.getWidth()/2))[0],n=t[1],h.isRange){var s=o+h.scale.getPosition();h.butt1CloserCheck(s)?h.butt1Move(i,n):h.butt2Move(i,n)}else h.butt2Move(i,n)},this.mark1Onclick=function(){var e=-h.button2.getWidth()/2,t=h.minValue;h.isRange?h.butt1Move(e,t):h.butt2Move(e,t)},this.mark4Onclick=function(){var e=h.scale.getDimension()-h.button2.getWidth()/2;h.butt2Move(e,h.maxValue)},this.mark2Onclick=function(){var e=h.isFloat?parseFloat(h.graduation.mark2.innerHTML):parseInt(h.graduation.mark2.innerHTML);h.interMarkHandler(e)},this.mark3Onclick=function(){var e=h.isFloat?parseFloat(h.graduation.mark3.innerHTML):parseInt(h.graduation.mark3.innerHTML);h.interMarkHandler(e)},this.checkStep=function(){var e=Math.abs(c.default.parsing(h.step));null===e||0===e||e>h.maxValue-h.minValue?(h.step=(h.maxValue-h.minValue)/2,console.log("Wrong value of the step. It's setted to the half of (maxValue - minValue)")):(h.isFloat=e%1!=0,h.step=e)},this.checkValues=function(){"number"!=typeof h.maxValue&&console.error("Maxvalue should be a number"),"number"!=typeof h.minValue&&console.error("Maxvalue should be a number"),"number"!=typeof h.step&&console.error("Step should be a number"),"boolean"!=typeof h.isRange&&console.error("isRange should be a boolean"),"boolean"!=typeof h.isVertical&&console.error("isVertical should be a boolean"),"boolean"!=typeof h.showLabel&&console.error("ShowLabel should be a boolean"),h.step>h.maxValue-h.minValue&&(h.step=h.maxValue-h.minValue,console.error("Step is setted to the max"))},this.init=function(){h.checkStep(),h.checkValues(),h.renew(),h.scale.init(h.isVertical),h.scaleFilling.init(h.isVertical),h.graduation.init(h.minValue,h.maxValue,h.isVertical,h.isFloat),h.button1.init(h.isVertical),h.button2.init(h.isVertical),h.label1.init(h.isVertical),h.label2.init(h.isVertical),h.button1.elem.style.display="none",h.label1.elem.style.display="none",h.showLabel?(h.label1.elem.style.display="block",h.label2.elem.style.display="block"):(h.label1.elem.style.display="none",h.label2.elem.style.display="none"),h.isRange?h.button1.elem.style.display="block":(h.button1.elem.style.display="none",h.label1.elem.style.display="none"),h.button1.setPosition(-h.button1.getWidth()/2),h.button2.setPosition(h.scale.getDimension()-h.button2.getWidth()/2),h.label1.setPosition(h.getStart(),h.minValue),h.label2.setPosition(h.getEnd(),h.maxValue),h.isVertical?h.graduation.gradElem.style.height=h.scale.getDimension()+"px":h.graduation.gradElem.style.height="20px",h.updateElems()},this.append=function(e){e.appendChild(h.scale.elem).appendChild(h.scaleFilling.elem),e.appendChild(h.button1.elem),e.appendChild(h.label1.elem),e.appendChild(h.graduation.gradElem),e.appendChild(h.button2.elem),e.appendChild(h.label2.elem),h.scale.elem.onclick=h.scaleOnclick,h.graduation.mark1.onclick=h.mark1Onclick,h.graduation.mark2.onclick=h.mark2Onclick,h.graduation.mark3.onclick=h.mark3Onclick,h.graduation.mark4.onclick=h.mark4Onclick,h.button1.elem.onmousedown=function(e){e.preventDefault(),document.addEventListener("mousemove",h.onMouseMove1),document.addEventListener("mouseup",h.onMouseUp1)},h.button2.elem.onmousedown=function(e){e.preventDefault(),document.addEventListener("mousemove",h.onMouseMove2),document.addEventListener("mouseup",h.onMouseUp2)}},this.scale=new s.default(d),this.button1=new r.default(d),this.button2=new r.default(d),this.label1=new l.default(d),this.label2=new l.default(d),this.scaleFilling=new u.default(d),this.graduation=new a.default,this.minValue=e,this.maxValue=t,this.curMinValue=e,this.curMaxValue=t,this.step=i,this.isRange=o,this.isVertical=d,this.showLabel=f,this.isFloat=m,this.observers=new n.default,this.checkStep(),this.checkValues()}return e.prototype.renew=function(){var e,t,i,n,o,s,a=this.offsetValueConv(this.curMaxValue);if(s=(e=this.butt2OffsetCheck(a))[0],void 0===(o=e[1])&&(s=(t=this.roundOffsetButt(s))[0],o=t[1]),this.butt2Move(s,o),this.isRange){var r,l,u=this.offsetValueConv(this.curMinValue);l=(i=this.butt1OffsetCheck(u))[0],void 0===(r=i[1])&&(l=(n=this.roundOffsetButt(l))[0],r=n[1]),this.butt1Move(l,r)}},e}()},function(e,t,i){"use strict";i.r(t);var n=function(){function e(){}return e.parsing=function(e){if("number"==typeof e)return e;if("string"==typeof e){if(/^-?\d+[\.,]\d+$/.test(e))return parseFloat(e);if(/^-?\d+$/.test(e))return parseInt(e)}return null},e}();t.default=n},function(e,t,i){"use strict";i.r(t);var n=i(1),o=function(){function e(e,t){void 0===e&&(e=0),void 0===t&&(t=1e3),this.curMinValue=e,this.curMaxValue=t,this.observers=new n.default}return e.prototype.setCurMinValue=function(e){this.curMinValue!=e&&(this.curMinValue=e,this.observers.notifyObservers())},e.prototype.setCurMaxValue=function(e){this.curMaxValue!=e&&(this.curMaxValue=e,this.observers.notifyObservers())},e}();t.default=o},function(e,t,i){var n={"./blocks/button/Button.ts":2,"./blocks/controller/Controller.ts":7,"./blocks/createElem/createElem.ts":0,"./blocks/graduation/Graduation.ts":5,"./blocks/label/Label.ts":3,"./blocks/makeObservableObject/MakeObservableObject.ts":1,"./blocks/model/Model.ts":10,"./blocks/parsingDigits/ParsingDigits.ts":9,"./blocks/scale/Scale.ts":4,"./blocks/scaleFilling/ScaleFilling.ts":6,"./blocks/view/View.ts":8,"./pluginWrapper.ts":12,"./styles/style.scss":13};function o(e){var t=s(e);return i(t)}function s(e){if(!i.o(n,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return n[e]}o.keys=function(){return Object.keys(n)},o.resolve=s,e.exports=o,o.id=11},function(e,t,i){"use strict";i.r(t);var n,o,s,a=i(7),r=function(){return(r=Object.assign||function(e){for(var t,i=1,n=arguments.length;i<n;i++)for(var o in t=arguments[i])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)},l=function(){for(var e=0,t=0,i=arguments.length;t<i;t++)e+=arguments[t].length;var n=Array(e),o=0;for(t=0;t<i;t++)for(var s=arguments[t],a=0,r=s.length;a<r;a++,o++)n[o]=s[a];return n};n=jQuery,o={minValue:0,maxValue:1e3,step:1,isRange:!1,isVertical:!1,showLabel:!1,isFloat:!1},s={init:function(e){if(!n(this).data("slider")){var t=r({},o),i=new(a.default.bind.apply(a.default,l([void 0],Object.values(n.extend(t,e)))));n(this).data("slider",i),i.append(n(this))}},update:function(e){n(this).data("slider").update(e)},getConfig:function(){return n(this).data("slider").getConfig()},setValues:function(e){n(this).data("slider").setValues(e.curMinValue,e.curMaxValue)},inputsAttach:function(e){var t=n(this).data("slider");t.addObserver((function(){e.minValueIn.val(t.getValues()[0]),e.maxValueIn.val(t.getValues()[1])}))}},n.fn.omfgslider=function(e){return s[e]?s[e].apply(this,Array.prototype.slice.call(arguments,1)):"object"!=typeof e&&e?void n.error("Метод "+e+" не найден в плагине jQuery.omfgslider"):s.init.apply(this,arguments)}},function(e,t,i){},function(e,t,i){"use strict";i.r(t);var n;i.p;(n=i(11)).keys().forEach(n)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,