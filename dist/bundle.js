!function(t){var e={};function i(s){if(e[s])return e[s].exports;var n=e[s]={i:s,l:!1,exports:{}};return t[s].call(n.exports,n,n.exports,i),n.l=!0,n.exports}i.m=t,i.c=e,i.d=function(t,e,s){i.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:s})},i.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},i.t=function(t,e){if(1&e&&(t=i(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var s=Object.create(null);if(i.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var n in t)i.d(s,n,function(e){return t[e]}.bind(null,n));return s},i.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(e,"a",e),e},i.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},i.p="",i(i.s=1)}([function(t,e,i){},function(t,e,i){"use strict";i.r(e);i.p,i(0);var s=function(){function t(){this.observers=[]}return t.prototype.addObserver=function(t){if("function"!=typeof t)throw new Error("observer must be a function");for(var e=0,i=this.observers;e<i.length;e++){if(i[e]===t)throw new Error("observer already in the list")}this.observers.push(t)},t.prototype.removeObserver=function(t){for(var e=0;e<this.observers.length;e++){if(this.observers[e]===t)return void this.observers.splice(e,1)}throw new Error("could not find observer in list of observers")},t.prototype.notifyObservers=function(){for(var t=this.observers.slice(0),e=0;e<t.length;e++)t[e]()},t}();function n(t){var e=document.createElement("div");return e.ondragstart=function(){return!1},e.classList.add(t),e}var l=function(){function t(){this.elem=n("slider__scale")}return t.prototype.getLeft=function(){return this.elem.getBoundingClientRect().left},t.prototype.getWidth=function(){return this.elem.getBoundingClientRect().width},t.prototype.getHeight=function(){return this.elem.getBoundingClientRect().height},t.prototype.getTop=function(){return this.elem.getBoundingClientRect().top},t}(),o=function(){function t(){this.gradElem=n("slider__graduation"),this.mark1=n("slider__graduation__mark"),this.mark2=n("slider__graduation__mark"),this.mark3=n("slider__graduation__mark"),this.mark4=n("slider__graduation__mark"),this.gradElem.appendChild(this.mark1),this.gradElem.appendChild(this.mark2),this.gradElem.appendChild(this.mark3),this.gradElem.appendChild(this.mark4),this.init=this.init.bind(this)}return t.prototype.init=function(t,e,i,s){void 0===s&&(s=!1),this.mark1.innerHTML=t+"",s?(this.mark2.innerHTML=t+parseFloat(((e-t)/3).toFixed(2))+"",this.mark3.innerHTML=t+parseFloat((2*(e-t)/3).toFixed(2))+""):(this.mark2.innerHTML=t+Math.round((e-t)/3)+"",this.mark3.innerHTML=t+Math.round(2*(e-t)/3)+""),this.mark4.innerHTML=e+"",i?(this.mark1.style.marginTop="-9px",this.mark1.style.marginLeft="0",this.mark4.style.marginBottom="-9px",this.mark4.style.marginLeft="0"):(this.mark1.style.marginLeft="-15px",this.mark1.style.marginTop="0",this.mark4.style.marginRight="-15px",this.mark4.style.marginTop="0")},t}(),h=function(){function t(){this.elem=n("slider__button")}return t.prototype.getLeft=function(){return this.elem.getBoundingClientRect().left},t.prototype.getWidth=function(){return this.elem.getBoundingClientRect().width},t.prototype.getTop=function(){return this.elem.getBoundingClientRect().top},t}(),a=function(){function t(){this.elem=n("slider__button__label")}return t.prototype.getWidth=function(){return this.elem.getBoundingClientRect().width},t.prototype.getHeight=function(){return this.elem.getBoundingClientRect().height},t}(),r=function(){this.elem=n("slider__scale__filling")},u=function(){function t(t,e,i,n,u,c,d){var b=this;void 0===t&&(t=0),void 0===e&&(e=1e3),void 0===i&&(i=1),void 0===n&&(n=!1),void 0===u&&(u=!1),void 0===c&&(c=!1),void 0===d&&(d=!1),this.scaleOnclick=function(t){if(b.range){(b.vertical?Math.abs(t.clientY-b.button1.getTop()-b.button1.getWidth()/2)<Math.abs(t.clientY-b.button2.getTop()-b.button2.getWidth()/2):Math.abs(t.clientX-b.button1.getLeft()-b.button1.getWidth()/2)<Math.abs(t.clientX-b.button2.getLeft()-b.button2.getWidth()/2))?b.onMouseMove1(t):b.onMouseMove2(t)}else b.onMouseMove2(t)},this.mark1Onclick=function(t){var e=-b.button2.getWidth()/2,i=b.minValue;b.range?b.butt1Move(e,i):b.butt2Move(e,i)},this.mark4Onclick=function(t){if(b.vertical){var e=b.scale.getHeight()-b.button2.getWidth()/2,i=b.maxValue;b.butt2Move(e,i)}else{e=b.scale.getWidth()-b.button2.getWidth()/2,i=b.maxValue;b.butt2Move(e,i)}},this.mark2Onclick=function(t){var e=b.float?parseFloat(b.graduation.mark2.innerHTML):parseInt(b.graduation.mark2.innerHTML);b.interMarkHandler(e)},this.mark3Onclick=function(t){var e=b.float?parseFloat(b.graduation.mark3.innerHTML):parseInt(b.graduation.mark3.innerHTML);b.interMarkHandler(e)},this.scale=new l,this.button1=new h,this.button2=new h,this.label1=new a,this.label2=new a,this.scaleFilling=new r,this.graduation=new o,this.minValue=t,this.maxValue=e,this.curMinValue=t,this.curMaxValue=e,this.step=i,this.range=n,this.vertical=u,this.showLabel=c,this.float=d,this.observers=new s,this.checkValues(),this.getStart=this.getStart.bind(this),this.getEnd=this.getEnd.bind(this),this.updateElems=this.updateElems.bind(this),this.round=this.round.bind(this),this.roundOffsetButt=this.roundOffsetButt.bind(this),this.checkValues=this.checkValues.bind(this),this.offsetValueConv=this.offsetValueConv.bind(this),this.butt1Move=this.butt1Move.bind(this),this.butt1OffsetCheck=this.butt1OffsetCheck.bind(this),this.onMouseMove1=this.onMouseMove1.bind(this),this.onMouseUp1=this.onMouseUp1.bind(this),this.butt2Move=this.butt2Move.bind(this),this.butt2OffsetCheck=this.butt2OffsetCheck.bind(this),this.onMouseMove2=this.onMouseMove2.bind(this),this.onMouseUp2=this.onMouseUp2.bind(this),this.scaleOnclick=this.scaleOnclick.bind(this),this.interMarkHandler=this.interMarkHandler.bind(this),this.mark1Onclick=this.mark1Onclick.bind(this),this.mark2Onclick=this.mark2Onclick.bind(this),this.mark3Onclick=this.mark3Onclick.bind(this),this.mark4Onclick=this.mark4Onclick.bind(this),this.append=this.append.bind(this)}return t.prototype.getStart=function(){return this.range?this.vertical?this.button1.getTop()-this.scale.getTop()+this.button1.getWidth()/2:this.button1.getLeft()-this.scale.getLeft()+this.button1.getWidth()/2:0},t.prototype.getEnd=function(){return this.vertical?this.button2.getTop()-this.scale.getTop()+this.button2.getWidth()/2:this.button2.getLeft()-this.scale.getLeft()+this.button2.getWidth()/2},t.prototype.updateElems=function(){this.vertical?(this.scaleFilling.elem.style.top=this.getStart()+"px",this.scaleFilling.elem.style.left="0",this.scaleFilling.elem.style.height=this.getEnd()-this.getStart()+"px",this.scaleFilling.elem.style.width="100%"):(this.scaleFilling.elem.style.left=this.getStart()+"px",this.scaleFilling.elem.style.top="0",this.scaleFilling.elem.style.width=this.getEnd()-this.getStart()+"px",this.scaleFilling.elem.style.height="100%"),this.range||(this.curMinValue=this.minValue),this.observers.notifyObservers()},t.prototype.round=function(t,e){var i=Math.floor(t/e),s=t%e;return t<0?Math.abs(s)>e/2?i*e:(i+1)*e:s<e/2?i*e:(i+1)*e},t.prototype.roundOffsetButt=function(t){var e;e=this.vertical?this.scale.getHeight():this.scale.getWidth();var i=this.minValue+(t+this.button2.getWidth()/2)*(this.maxValue-this.minValue)/e,s=this.round(i,this.step);return this.float&&(s=parseFloat(s.toFixed(2))),s<this.minValue?s=this.minValue:s>this.maxValue&&(s=this.maxValue),[(s-this.minValue)*e/(this.maxValue-this.minValue)-this.button2.getWidth()/2,s]},t.prototype.offsetValueConv=function(t){return this.vertical?(t-this.minValue)/(this.maxValue-this.minValue)*this.scale.getHeight()-this.button2.getWidth()/2:(t-this.minValue)/(this.maxValue-this.minValue)*this.scale.getWidth()-this.button2.getWidth()/2},t.prototype.butt1Move=function(t,e){this.vertical?(this.button1.elem.style.top=t+"px",this.label1.elem.style.top=t-this.label1.getHeight()/2+this.button1.getWidth()/2+"px"):(this.button1.elem.style.left=t+"px",this.label1.elem.style.left=t-this.label1.getWidth()/2+this.button1.getWidth()/2+"px"),e<this.minValue&&(e=this.minValue),this.label1.elem.innerHTML=e+"",this.curMinValue=e,this.updateElems()},t.prototype.butt1OffsetCheck=function(t){var e;if(this.vertical){var i=this.step*this.scale.getHeight()/(this.maxValue-this.minValue);t<-this.button2.getWidth()/2&&(t=-this.button2.getWidth()/2,e=this.minValue),i/1.5>this.button2.getWidth()?t>this.button2.getTop()-this.scale.getTop()-i/1.5&&(t=this.button2.getTop()-this.scale.getTop()-i/1.5):t>this.button2.getTop()-this.scale.getTop()-this.button2.getWidth()&&(t=this.button2.getTop()-this.scale.getTop()-this.button2.getWidth())}else{i=this.step*this.scale.getWidth()/(this.maxValue-this.minValue);t<-this.button1.getWidth()/2&&(t=-this.button1.getWidth()/2,e=this.minValue),i/1.5>this.button1.getWidth()?t>this.button2.getLeft()-this.scale.getLeft()-i/1.5&&(t=this.button2.getLeft()-this.scale.getLeft()-i/1.5):t>this.button2.getLeft()-this.scale.getLeft()-this.button2.getWidth()&&(t=this.button2.getLeft()-this.scale.getLeft()-this.button2.getWidth())}return[t,e]},t.prototype.onMouseMove1=function(t){var e,i,s,n,l;s=this.vertical?t.clientY-this.scale.getTop()-this.button1.getWidth()/2:t.clientX-this.scale.getLeft()-this.button1.getWidth()/2,l=(e=this.butt1OffsetCheck(s))[0],(n=e[1])||(l=(i=this.roundOffsetButt(l))[0],n=i[1]),this.butt1Move(l,n)},t.prototype.onMouseUp1=function(t){document.removeEventListener("mouseup",this.onMouseUp1),document.removeEventListener("mousemove",this.onMouseMove1)},t.prototype.butt2Move=function(t,e){this.vertical?(this.button2.elem.style.top=t+"px",this.label2.elem.style.top=t-this.label2.getHeight()/2+this.button2.getWidth()/2+"px"):(this.button2.elem.style.left=t+"px",this.label2.elem.style.left=t-this.label2.getWidth()/2+this.button2.getWidth()/2+"px"),e<this.minValue?e=this.minValue:e>this.maxValue&&(e=this.maxValue),this.label2.elem.innerHTML=e+"",this.curMaxValue=e,this.updateElems()},t.prototype.butt2OffsetCheck=function(t){var e;if(this.range||t<-this.button2.getWidth()/2&&(t=-this.button2.getWidth()/2,e=this.minValue),this.vertical){var i=this.step*this.scale.getHeight()/(this.maxValue-this.minValue);t>this.scale.getHeight()-this.button2.getWidth()/2&&(t=this.scale.getHeight()-this.button2.getWidth()/2,e=this.maxValue),i/1.5>this.button2.getWidth()?t<this.button1.getTop()-this.scale.getTop()+i/1.5&&(t=this.button1.getTop()-this.scale.getTop()+i/1.5):t<this.button1.getTop()-this.scale.getTop()+this.button2.getWidth()&&(t=this.button1.getTop()-this.scale.getTop()+this.button2.getWidth())}else{i=this.step*this.scale.getWidth()/(this.maxValue-this.minValue);t>this.scale.getWidth()-this.button2.getWidth()/2&&(t=this.scale.getWidth()-this.button2.getWidth()/2,e=this.maxValue),i/1.5>this.button2.getWidth()?t<this.button1.getLeft()-this.scale.getLeft()+i/1.5&&(t=this.button1.getLeft()-this.scale.getLeft()+i/1.5):t<this.button1.getLeft()-this.scale.getLeft()+this.button2.getWidth()&&(t=this.button1.getLeft()-this.scale.getLeft()+this.button2.getWidth())}return[t,e]},t.prototype.onMouseMove2=function(t){var e,i,s,n,l;s=this.vertical?t.clientY-this.scale.getTop()-this.button2.getWidth()/2:t.clientX-this.scale.getLeft()-this.button2.getWidth()/2,l=(e=this.butt2OffsetCheck(s))[0],(n=e[1])||(l=(i=this.roundOffsetButt(l))[0],n=i[1]),this.butt2Move(l,n)},t.prototype.onMouseUp2=function(t){document.removeEventListener("mouseup",this.onMouseUp2),document.removeEventListener("mousemove",this.onMouseMove2)},t.prototype.interMarkHandler=function(t){var e,i,s,n;if(this.vertical){var l=(t-this.minValue)/(this.maxValue-this.minValue)*this.scale.getHeight();s=(e=this.roundOffsetButt(l-this.button2.getWidth()/2))[0],n=e[1],this.range&&Math.abs(l+this.scale.getTop()-this.button1.getTop()-this.button2.getWidth()/2)<Math.abs(l+this.scale.getTop()-this.button2.getTop()-this.button2.getWidth()/2)?this.butt1Move(s,n):this.butt2Move(s,n)}else{l=(t-this.minValue)/(this.maxValue-this.minValue)*this.scale.getWidth();s=(i=this.roundOffsetButt(l-this.button2.getWidth()/2))[0],n=i[1],this.range&&Math.abs(l+this.scale.getLeft()-this.button1.getLeft()-this.button2.getWidth()/2)<Math.abs(l+this.scale.getLeft()-this.button2.getLeft()-this.button2.getWidth()/2)?this.butt1Move(s,n):this.butt2Move(s,n)}},t.prototype.init=function(){this.button1.elem.style.display="none",this.label1.elem.style.display="none",this.graduation.init(this.minValue,this.maxValue,this.vertical,this.float),this.checkValues(),this.showLabel?(this.label1.elem.style.display="block",this.label2.elem.style.display="block"):(this.label1.elem.style.display="none",this.label2.elem.style.display="none"),this.range?this.button1.elem.style.display="block":(this.button1.elem.style.display="none",this.label1.elem.style.display="none"),this.vertical?(this.scale.elem.classList.add("slider__scale_vertical"),this.scaleFilling.elem.classList.add("slider__scale__filling_vertical"),this.graduation.gradElem.classList.add("slider__graduation_vertical"),this.graduation.gradElem.style.height=this.scale.getHeight()+"px",this.button1.elem.classList.add("slider__button_vertical"),this.button2.elem.classList.add("slider__button_vertical"),this.label1.elem.classList.add("slider__button__label_vertical"),this.label2.elem.classList.add("slider__button__label_vertical"),this.button1.elem.style.top=-this.button1.getWidth()/2+"px",this.button1.elem.style.left="50%",this.button2.elem.style.top=this.scale.getHeight()-this.button2.getWidth()/2+"px",this.button2.elem.style.left="50%",this.label1.elem.innerHTML=this.minValue+"",this.label2.elem.innerHTML=this.maxValue+"",this.label1.elem.style.top=this.getStart()-this.label1.getHeight()/2+"px",this.label1.elem.style.left="50%",this.label2.elem.style.top=this.getEnd()-this.label2.getHeight()/2+"px",this.label2.elem.style.left="50%"):(this.scale.elem.classList.remove("slider__scale_vertical"),this.scaleFilling.elem.classList.remove("slider__scale__filling_vertical"),this.graduation.gradElem.classList.remove("slider__graduation_vertical"),this.graduation.gradElem.style.height="20px",this.button1.elem.classList.remove("slider__button_vertical"),this.button2.elem.classList.remove("slider__button_vertical"),this.label1.elem.classList.remove("slider__button__label_vertical"),this.label2.elem.classList.remove("slider__button__label_vertical"),this.button1.elem.style.left=-this.button1.getWidth()/2+"px",this.button1.elem.style.top="50%",this.button2.elem.style.left=this.scale.getWidth()-this.button2.getWidth()/2+"px",this.button2.elem.style.top="50%",this.label1.elem.innerHTML=this.minValue+"",this.label2.elem.innerHTML=this.maxValue+"",this.label1.elem.style.left=this.getStart()-this.label1.getWidth()/2+"px",this.label1.elem.style.top="50%",this.label2.elem.style.left=this.getEnd()-this.label2.getWidth()/2+"px",this.label2.elem.style.top="50%"),this.updateElems()},t.prototype.checkValues=function(){"number"!=typeof this.maxValue&&console.error("Maxvalue should be a number"),"number"!=typeof this.minValue&&console.error("Maxvalue should be a number"),"number"!=typeof this.step&&console.error("Step should be a number"),"boolean"!=typeof this.range&&console.error("Range should be a boolean"),"boolean"!=typeof this.vertical&&console.error("Vertical should be a boolean"),"boolean"!=typeof this.showLabel&&console.error("ShowLabel should be a boolean"),this.step>this.maxValue-this.minValue&&(this.step=this.maxValue-this.minValue,console.error("Step is setted to the max"))},t.prototype.append=function(t){var e=this;t.appendChild(this.scale.elem).appendChild(this.scaleFilling.elem),t.appendChild(this.button1.elem),t.appendChild(this.label1.elem),t.appendChild(this.graduation.gradElem),t.appendChild(this.button2.elem),t.appendChild(this.label2.elem),this.scale.elem.onclick=this.scaleOnclick,this.graduation.mark1.onclick=this.mark1Onclick,this.graduation.mark2.onclick=this.mark2Onclick,this.graduation.mark3.onclick=this.mark3Onclick,this.graduation.mark4.onclick=this.mark4Onclick,this.button1.elem.onmousedown=function(t){t.preventDefault(),document.addEventListener("mousemove",e.onMouseMove1),document.addEventListener("mouseup",e.onMouseUp1)},this.button2.elem.onmousedown=function(t){t.preventDefault(),document.addEventListener("mousemove",e.onMouseMove2),document.addEventListener("mouseup",e.onMouseUp2)}},t}(),c=function(){function t(t,e){void 0===t&&(t=0),void 0===e&&(e=1e3),this.curMinValue=t,this.curMaxValue=e,this.observers=new s}return t.prototype.setCurMinValue=function(t){this.curMinValue!=t&&(this.curMinValue=t,this.observers.notifyObservers())},t.prototype.setCurMaxValue=function(t){this.curMaxValue!=t&&(this.curMaxValue=t,this.observers.notifyObservers())},t}(),d=function(){function t(t,e,i,n,l,o,h){var a=this;void 0===t&&(t=0),void 0===e&&(e=1e3),void 0===i&&(i=1),void 0===n&&(n=!1),void 0===l&&(l=!1),void 0===o&&(o=!1),void 0===h&&(h=!1),this.view=new u(t,e,i,n,l,o,h),this.model=new c(t,e),this.observers=new s,this.view.observers.addObserver((function(){a.model.curMinValue=a.view.curMinValue,a.model.curMaxValue=a.view.curMaxValue,a.observers.notifyObservers()})),this.model.observers.addObserver((function(){var t=a.model.curMinValue,e=a.model.curMaxValue;a.view.butt1Move(a.view.offsetValueConv(t),t),a.view.butt2Move(a.view.offsetValueConv(e),e),a.observers.notifyObservers()})),this.update=this.update.bind(this),this.getValues=this.getValues.bind(this),this.getConfig=this.getConfig.bind(this),this.addObserver=this.addObserver.bind(this)}return t.prototype.append=function(t){this.view.append(t.get(0)),this.view.init()},t.prototype.update=function(t){var e=this;Object.keys(t).map((function(i){void 0!==e.view[i]&&(e.view[i]=t[i])})),this.view.init(),this.view.butt1Move(this.view.butt1OffsetCheck(this.view.offsetValueConv(this.model.curMinValue))[0],this.model.curMinValue),this.view.butt2Move(this.view.butt2OffsetCheck(this.view.offsetValueConv(this.model.curMaxValue))[0],this.model.curMaxValue)},t.prototype.getValues=function(){return[this.model.curMinValue,this.model.curMaxValue]},t.prototype.setValues=function(t,e){t&&this.model.setCurMinValue(t),e&&this.model.setCurMaxValue(e)},t.prototype.getConfig=function(){return{minValue:this.view.minValue,maxValue:this.view.maxValue,step:this.view.step,range:this.view.range,vertical:this.view.vertical,showLabel:this.view.showLabel,float:this.view.float}},t.prototype.addObserver=function(t){this.observers.addObserver(t)},t}();!function(t){const e={minValue:0,maxValue:1e3,step:1,range:!1,vertical:!1,showLabel:!1,float:!1},i={init:function(i){if(!t(this).data("slider")){const s=JSON.parse(JSON.stringify(e)),n=new d(...Object.values(t.extend(s,i)));t(this).data("slider",n),n.append(t(this))}},update:function(e){t(this).data("slider").update(e)},getConfig:function(){return t(this).data("slider").getConfig()},setValues:function(e){t(this).data("slider").setValues(e.curMinValue,e.curMaxValue)},inputsAttach:function(e){const i=t(this).data("slider");i.addObserver(()=>{e.minValueIn.val(i.getValues()[0]),e.maxValueIn.val(i.getValues()[1])})}};t.fn.omfgslider=function(e){return i[e]?i[e].apply(this,Array.prototype.slice.call(arguments,1)):"object"!=typeof e&&e?void t.error('Метод "'+e+'" не найден в плагине jQuery.mySimplePlugin'):i.init.apply(this,arguments)}}(jQuery)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vc3JjL3Rlc3QuaHRtbCIsIndlYnBhY2s6Ly8vLi9zcmMvTU9PLnRzIiwid2VicGFjazovLy8uL3NyYy92aWV3LnRzIiwid2VicGFjazovLy8uL3NyYy9tb2RlbC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvY29udHJvbGxlci50cyIsIndlYnBhY2s6Ly8vLi9zcmMvbWFpbi5qcyJdLCJuYW1lcyI6WyJpbnN0YWxsZWRNb2R1bGVzIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiZXhwb3J0cyIsIm1vZHVsZSIsImkiLCJsIiwibW9kdWxlcyIsImNhbGwiLCJtIiwiYyIsImQiLCJuYW1lIiwiZ2V0dGVyIiwibyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsInIiLCJTeW1ib2wiLCJ0b1N0cmluZ1RhZyIsInZhbHVlIiwidCIsIm1vZGUiLCJfX2VzTW9kdWxlIiwibnMiLCJjcmVhdGUiLCJrZXkiLCJiaW5kIiwibiIsIm9iamVjdCIsInByb3BlcnR5IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJwIiwicyIsInRoaXMiLCJvYnNlcnZlcnMiLCJhZGRPYnNlcnZlciIsImZuIiwiRXJyb3IiLCJwdXNoIiwicmVtb3ZlT2JzZXJ2ZXIiLCJsZW5ndGgiLCJzcGxpY2UiLCJub3RpZnlPYnNlcnZlcnMiLCJvYnNlcnZlcnNTbmFwc2hvdCIsInNsaWNlIiwiY3JlYXRlRWxlbSIsImNsYXNzTmFtZSIsImVsZW0iLCJkb2N1bWVudCIsImNyZWF0ZUVsZW1lbnQiLCJvbmRyYWdzdGFydCIsImNsYXNzTGlzdCIsImFkZCIsImdldExlZnQiLCJnZXRCb3VuZGluZ0NsaWVudFJlY3QiLCJsZWZ0IiwiZ2V0V2lkdGgiLCJ3aWR0aCIsImdldEhlaWdodCIsImhlaWdodCIsImdldFRvcCIsInRvcCIsImdyYWRFbGVtIiwibWFyazEiLCJtYXJrMiIsIm1hcmszIiwibWFyazQiLCJhcHBlbmRDaGlsZCIsImluaXQiLCJtaW5WYWx1ZSIsIm1heFZhbHVlIiwidmVydGljYWwiLCJmbG9hdCIsImlubmVySFRNTCIsInBhcnNlRmxvYXQiLCJ0b0ZpeGVkIiwiTWF0aCIsInJvdW5kIiwic3R5bGUiLCJtYXJnaW5Ub3AiLCJtYXJnaW5MZWZ0IiwibWFyZ2luQm90dG9tIiwibWFyZ2luUmlnaHQiLCJzdGVwIiwicmFuZ2UiLCJzaG93TGFiZWwiLCJzY2FsZU9uY2xpY2siLCJldmVudCIsImFicyIsImNsaWVudFkiLCJidXR0b24xIiwiYnV0dG9uMiIsImNsaWVudFgiLCJvbk1vdXNlTW92ZTEiLCJvbk1vdXNlTW92ZTIiLCJtYXJrMU9uY2xpY2siLCJyb3VuZE9mZnNldCIsInJvdW5kVmFsdWUiLCJidXR0MU1vdmUiLCJidXR0Mk1vdmUiLCJtYXJrNE9uY2xpY2siLCJzY2FsZSIsIm1hcmsyT25jbGljayIsInZhbCIsImdyYWR1YXRpb24iLCJwYXJzZUludCIsImludGVyTWFya0hhbmRsZXIiLCJtYXJrM09uY2xpY2siLCJTY2FsZSIsIkJ1dHRvbiIsImxhYmVsMSIsIkxhYmVsIiwibGFiZWwyIiwic2NhbGVGaWxsaW5nIiwiU2NhbGVGaWxsaW5nIiwiR3JhZHVhdGlvbiIsImN1ck1pblZhbHVlIiwiY3VyTWF4VmFsdWUiLCJNYWtlT2JzZXJ2YWJsZU9iamVjdCIsImNoZWNrVmFsdWVzIiwiZ2V0U3RhcnQiLCJnZXRFbmQiLCJ1cGRhdGVFbGVtcyIsInJvdW5kT2Zmc2V0QnV0dCIsIm9mZnNldFZhbHVlQ29udiIsImJ1dHQxT2Zmc2V0Q2hlY2siLCJvbk1vdXNlVXAxIiwiYnV0dDJPZmZzZXRDaGVjayIsIm9uTW91c2VVcDIiLCJhcHBlbmQiLCJ3aG9sZSIsImZsb29yIiwicmVtaW5kZXIiLCJjdXJyT2Zmc2V0Iiwic2NhbGVNZXNzdXJlIiwiY3VyclZhbHVlIiwibmV3T2Zmc2V0Iiwic3RlcFdpZHRoIiwiZXZlbnRNbSIsImV2ZW50TXUiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwibWFya1giLCJkaXNwbGF5IiwicmVtb3ZlIiwiY29uc29sZSIsImVycm9yIiwiZW50cnkiLCJvbmNsaWNrIiwib25tb3VzZWRvd24iLCJldmVudE1kIiwicHJldmVudERlZmF1bHQiLCJhZGRFdmVudExpc3RlbmVyIiwic2V0Q3VyTWluVmFsdWUiLCJkYXRhIiwic2V0Q3VyTWF4VmFsdWUiLCJ2aWV3IiwibW9kZWwiLCJ1cGRhdGUiLCJnZXRWYWx1ZXMiLCJnZXRDb25maWciLCJhcmdzIiwia2V5cyIsIm1hcCIsIml0ZW0iLCJ1bmRlZmluZWQiLCJzZXRWYWx1ZXMiLCIkIiwiY29uZmlnIiwibWV0aG9kcyIsIm9wdCIsIm5ld0NvbmZpZyIsIkpTT04iLCJwYXJzZSIsInN0cmluZ2lmeSIsInNsaWRlciIsInZhbHVlcyIsImV4dGVuZCIsImlucHV0c0F0dGFjaCIsIm1pblZhbHVlSW4iLCJtYXhWYWx1ZUluIiwib21mZ3NsaWRlciIsIm1ldGhvZCIsImFwcGx5IiwiQXJyYXkiLCJhcmd1bWVudHMiLCJqUXVlcnkiXSwibWFwcGluZ3MiOiJhQUNFLElBQUlBLEVBQW1CLEdBR3ZCLFNBQVNDLEVBQW9CQyxHQUc1QixHQUFHRixFQUFpQkUsR0FDbkIsT0FBT0YsRUFBaUJFLEdBQVVDLFFBR25DLElBQUlDLEVBQVNKLEVBQWlCRSxHQUFZLENBQ3pDRyxFQUFHSCxFQUNISSxHQUFHLEVBQ0hILFFBQVMsSUFVVixPQU5BSSxFQUFRTCxHQUFVTSxLQUFLSixFQUFPRCxRQUFTQyxFQUFRQSxFQUFPRCxRQUFTRixHQUcvREcsRUFBT0UsR0FBSSxFQUdKRixFQUFPRCxRQUtmRixFQUFvQlEsRUFBSUYsRUFHeEJOLEVBQW9CUyxFQUFJVixFQUd4QkMsRUFBb0JVLEVBQUksU0FBU1IsRUFBU1MsRUFBTUMsR0FDM0NaLEVBQW9CYSxFQUFFWCxFQUFTUyxJQUNsQ0csT0FBT0MsZUFBZWIsRUFBU1MsRUFBTSxDQUFFSyxZQUFZLEVBQU1DLElBQUtMLEtBS2hFWixFQUFvQmtCLEVBQUksU0FBU2hC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QyxNQUFNRCxLQUFLRSxVQUFVTixJQUN0Q08sRUFBUyxJQUFJLEtBQWNuSyxPQUFPb0ssT0FBT1QsRUFBRVUsT0FBT04sRUFBV0QsS0FDbkVILEVBQUVySSxNQUFNd0gsS0FBSyxTQUFVcUIsR0FDdkJBLEVBQU83QyxPQUFPcUMsRUFBRXJJLFNBR3hCNEgsT0FBUSxTQUFTWSxHQUNFSCxFQUFFckksTUFBTXdILEtBQUssVUFDckJJLE9BQU9ZLElBRWxCVixVQUFXLFdBRVAsT0FEZU8sRUFBRXJJLE1BQU13SCxLQUFLLFVBQ2RNLGFBRWxCTSxVQUFXLFNBQVNJLEdBQ0RILEVBQUVySSxNQUFNd0gsS0FBSyxVQUNyQlksVUFBVUksRUFBSXJELFlBQWFxRCxFQUFJcEQsY0FFMUM0RCxhQUFjLFNBQVNSLEdBQ25CLE1BQU1LLEVBQVNSLEVBQUVySSxNQUFNd0gsS0FBSyxVQUM1QnFCLEVBQU8zSSxZQUFZLEtBQ2ZzSSxFQUFJUyxXQUFXM0UsSUFBSXVFLEVBQU9oQixZQUFZLElBQ3RDVyxFQUFJVSxXQUFXNUUsSUFBSXVFLEVBQU9oQixZQUFZLFFBS2xEUSxFQUFFbEksR0FBR2dKLFdBQWEsU0FBU0MsR0FDdkIsT0FBS2IsRUFBUWEsR0FDRmIsRUFBU2EsR0FBU0MsTUFBT3JKLEtBQU1zSixNQUFNMUosVUFBVWUsTUFBTXhDLEtBQU1vTCxVQUFXLElBQ25ELGlCQUFYSCxHQUF5QkEsT0FHeENmLEVBQUVyQixNQUFPLFVBQWFvQyxFQUFTLCtDQUZ4QmIsRUFBUXBHLEtBQUtrSCxNQUFPckosS0FBTXVKLFlBN0M3QyxDQW1ER0MiLCJmaWxlIjoiYnVuZGxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiIFx0Ly8gVGhlIG1vZHVsZSBjYWNoZVxuIFx0dmFyIGluc3RhbGxlZE1vZHVsZXMgPSB7fTtcblxuIFx0Ly8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbiBcdGZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblxuIFx0XHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcbiBcdFx0aWYoaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0pIHtcbiBcdFx0XHRyZXR1cm4gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0uZXhwb3J0cztcbiBcdFx0fVxuIFx0XHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuIFx0XHR2YXIgbW9kdWxlID0gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0gPSB7XG4gXHRcdFx0aTogbW9kdWxlSWQsXG4gXHRcdFx0bDogZmFsc2UsXG4gXHRcdFx0ZXhwb3J0czoge31cbiBcdFx0fTtcblxuIFx0XHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cbiBcdFx0bW9kdWxlc1ttb2R1bGVJZF0uY2FsbChtb2R1bGUuZXhwb3J0cywgbW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cbiBcdFx0Ly8gRmxhZyB0aGUgbW9kdWxlIGFzIGxvYWRlZFxuIFx0XHRtb2R1bGUubCA9IHRydWU7XG5cbiBcdFx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcbiBcdFx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xuIFx0fVxuXG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBtb2R1bGVzO1xuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZSBjYWNoZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5jID0gaW5zdGFsbGVkTW9kdWxlcztcblxuIFx0Ly8gZGVmaW5lIGdldHRlciBmdW5jdGlvbiBmb3IgaGFybW9ueSBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSBmdW5jdGlvbihleHBvcnRzLCBuYW1lLCBnZXR0ZXIpIHtcbiBcdFx0aWYoIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBuYW1lKSkge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBuYW1lLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZ2V0dGVyIH0pO1xuIFx0XHR9XG4gXHR9O1xuXG4gXHQvLyBkZWZpbmUgX19lc01vZHVsZSBvbiBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIgPSBmdW5jdGlvbihleHBvcnRzKSB7XG4gXHRcdGlmKHR5cGVvZiBTeW1ib2wgIT09ICd1bmRlZmluZWQnICYmIFN5bWJvbC50b1N0cmluZ1RhZykge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBTeW1ib2wudG9TdHJpbmdUYWcsIHsgdmFsdWU6ICdNb2R1bGUnIH0pO1xuIFx0XHR9XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG4gXHR9O1xuXG4gXHQvLyBjcmVhdGUgYSBmYWtlIG5hbWVzcGFjZSBvYmplY3RcbiBcdC8vIG1vZGUgJiAxOiB2YWx1ZSBpcyBhIG1vZHVsZSBpZCwgcmVxdWlyZSBpdFxuIFx0Ly8gbW9kZSAmIDI6IG1lcmdlIGFsbCBwcm9wZXJ0aWVzIG9mIHZhbHVlIGludG8gdGhlIG5zXG4gXHQvLyBtb2RlICYgNDogcmV0dXJuIHZhbHVlIHdoZW4gYWxyZWFkeSBucyBvYmplY3RcbiBcdC8vIG1vZGUgJiA4fDE6IGJlaGF2ZSBsaWtlIHJlcXVpcmVcbiBcdF9fd2VicGFja19yZXF1aXJlX18udCA9IGZ1bmN0aW9uKHZhbHVlLCBtb2RlKSB7XG4gXHRcdGlmKG1vZGUgJiAxKSB2YWx1ZSA9IF9fd2VicGFja19yZXF1aXJlX18odmFsdWUpO1xuIFx0XHRpZihtb2RlICYgOCkgcmV0dXJuIHZhbHVlO1xuIFx0XHRpZigobW9kZSAmIDQpICYmIHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcgJiYgdmFsdWUgJiYgdmFsdWUuX19lc01vZHVsZSkgcmV0dXJuIHZhbHVlO1xuIFx0XHR2YXIgbnMgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIobnMpO1xuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobnMsICdkZWZhdWx0JywgeyBlbnVtZXJhYmxlOiB0cnVlLCB2YWx1ZTogdmFsdWUgfSk7XG4gXHRcdGlmKG1vZGUgJiAyICYmIHR5cGVvZiB2YWx1ZSAhPSAnc3RyaW5nJykgZm9yKHZhciBrZXkgaW4gdmFsdWUpIF9fd2VicGFja19yZXF1aXJlX18uZChucywga2V5LCBmdW5jdGlvbihrZXkpIHsgcmV0dXJuIHZhbHVlW2tleV07IH0uYmluZChudWxsLCBrZXkpKTtcbiBcdFx0cmV0dXJuIG5zO1xuIFx0fTtcblxuIFx0Ly8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubiA9IGZ1bmN0aW9uKG1vZHVsZSkge1xuIFx0XHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cbiBcdFx0XHRmdW5jdGlvbiBnZXREZWZhdWx0KCkgeyByZXR1cm4gbW9kdWxlWydkZWZhdWx0J107IH0gOlxuIFx0XHRcdGZ1bmN0aW9uIGdldE1vZHVsZUV4cG9ydHMoKSB7IHJldHVybiBtb2R1bGU7IH07XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsICdhJywgZ2V0dGVyKTtcbiBcdFx0cmV0dXJuIGdldHRlcjtcbiBcdH07XG5cbiBcdC8vIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbFxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5vID0gZnVuY3Rpb24ob2JqZWN0LCBwcm9wZXJ0eSkgeyByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwgcHJvcGVydHkpOyB9O1xuXG4gXHQvLyBfX3dlYnBhY2tfcHVibGljX3BhdGhfX1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5wID0gXCJcIjtcblxuXG4gXHQvLyBMb2FkIGVudHJ5IG1vZHVsZSBhbmQgcmV0dXJuIGV4cG9ydHNcbiBcdHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fKF9fd2VicGFja19yZXF1aXJlX18ucyA9IDEpO1xuIiwiZXhwb3J0IGRlZmF1bHQgX193ZWJwYWNrX3B1YmxpY19wYXRoX18gKyBcInRlc3QuaHRtbFwiOyIsImNsYXNzIE1ha2VPYnNlcnZhYmxlT2JqZWN0IHtcclxuICAgIG9ic2VydmVyczogQXJyYXk8RnVuY3Rpb24+O1xyXG4gICAgY29uc3RydWN0b3IoKSB7XHJcbiAgICAgICAgdGhpcy5vYnNlcnZlcnMgPSBbXTtcclxuICAgIH1cclxuICAgIGFkZE9ic2VydmVyIChmbjogRnVuY3Rpb24pOiB2b2lkIHtcclxuICAgICAgICBpZiAodHlwZW9mIGZuICE9PSAnZnVuY3Rpb24nKSB7XHJcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignb2JzZXJ2ZXIgbXVzdCBiZSBhIGZ1bmN0aW9uJyk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGZvciAobGV0IG9ic2VydmVyIG9mIHRoaXMub2JzZXJ2ZXJzKSB7XHJcbiAgICAgICAgICAgIGlmIChvYnNlcnZlciA9PT0gZm4pIHtcclxuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignb2JzZXJ2ZXIgYWxyZWFkeSBpbiB0aGUgbGlzdCcpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMub2JzZXJ2ZXJzLnB1c2goZm4pO1xyXG4gICAgfVxyXG4gICAgcmVtb3ZlT2JzZXJ2ZXIgKGZuOiBGdW5jdGlvbik6IHZvaWQge1xyXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5vYnNlcnZlcnMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgbGV0IG9ic2VydmVyID0gdGhpcy5vYnNlcnZlcnNbaV07XHJcbiAgICAgICAgICAgIGlmIChvYnNlcnZlciA9PT0gZm4pIHtcclxuICAgICAgICAgICAgICAgIHRoaXMub2JzZXJ2ZXJzLnNwbGljZShpLCAxKTtcclxuICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ2NvdWxkIG5vdCBmaW5kIG9ic2VydmVyIGluIGxpc3Qgb2Ygb2JzZXJ2ZXJzJyk7XHJcbiAgICB9XHJcbiAgICBub3RpZnlPYnNlcnZlcnMgKCk6IHZvaWQge1xyXG4gICAgICAgIGNvbnN0IG9ic2VydmVyc1NuYXBzaG90ID0gdGhpcy5vYnNlcnZlcnMuc2xpY2UoMCk7XHJcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBvYnNlcnZlcnNTbmFwc2hvdC5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICBvYnNlcnZlcnNTbmFwc2hvdFtpXSgpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IHtNYWtlT2JzZXJ2YWJsZU9iamVjdH07IiwiaW1wb3J0IHtNYWtlT2JzZXJ2YWJsZU9iamVjdH0gZnJvbSBcIi4vTU9PXCI7XHJcblxyXG4vLyBFbGVtZW50cyBmYWN0b3J5XHJcbmZ1bmN0aW9uIGNyZWF0ZUVsZW0oY2xhc3NOYW1lOiBzdHJpbmcpIDpIVE1MRWxlbWVudCB7XHJcbiAgICBjb25zdCBlbGVtID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcclxuICAgIGVsZW0ub25kcmFnc3RhcnQgPSAoKSA9PiBmYWxzZTtcclxuICAgIGVsZW0uY2xhc3NMaXN0LmFkZChjbGFzc05hbWUpO1xyXG4gICAgcmV0dXJuIGVsZW07XHJcbn1cclxuXHJcbmNsYXNzIFNjYWxlIHtcclxuICAgIGVsZW06IEhUTUxFbGVtZW50O1xyXG4gICAgY29uc3RydWN0b3IoKSB7dGhpcy5lbGVtID0gY3JlYXRlRWxlbShcInNsaWRlcl9fc2NhbGVcIik7XHJcbiAgICB9XHJcbiAgICBnZXRMZWZ0KCk6IG51bWJlciB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuZWxlbS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS5sZWZ0O1xyXG4gICAgfVxyXG4gICAgZ2V0V2lkdGgoKTogbnVtYmVyIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5lbGVtLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLndpZHRoO1xyXG4gICAgfVxyXG4gICAgZ2V0SGVpZ2h0KCk6IG51bWJlciB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuZWxlbS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS5oZWlnaHQ7XHJcbiAgICB9XHJcbiAgICBnZXRUb3AoKTogbnVtYmVyIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5lbGVtLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLnRvcDtcclxuICAgIH1cclxufVxyXG5cclxuY2xhc3MgR3JhZHVhdGlvbiB7XHJcbiAgICBncmFkRWxlbTogSFRNTEVsZW1lbnQ7XHJcbiAgICBtYXJrMTogSFRNTEVsZW1lbnQ7XHJcbiAgICBtYXJrMjogSFRNTEVsZW1lbnQ7XHJcbiAgICBtYXJrMzogSFRNTEVsZW1lbnQ7XHJcbiAgICBtYXJrNDogSFRNTEVsZW1lbnQ7XHJcbiAgICBjb25zdHJ1Y3RvcigpIHtcclxuICAgICAgICB0aGlzLmdyYWRFbGVtID0gY3JlYXRlRWxlbShcInNsaWRlcl9fZ3JhZHVhdGlvblwiKTtcclxuICAgICAgICB0aGlzLm1hcmsxID0gY3JlYXRlRWxlbShcInNsaWRlcl9fZ3JhZHVhdGlvbl9fbWFya1wiKTtcclxuICAgICAgICB0aGlzLm1hcmsyID0gY3JlYXRlRWxlbShcInNsaWRlcl9fZ3JhZHVhdGlvbl9fbWFya1wiKTtcclxuICAgICAgICB0aGlzLm1hcmszID0gY3JlYXRlRWxlbShcInNsaWRlcl9fZ3JhZHVhdGlvbl9fbWFya1wiKTtcclxuICAgICAgICB0aGlzLm1hcms0ID0gY3JlYXRlRWxlbShcInNsaWRlcl9fZ3JhZHVhdGlvbl9fbWFya1wiKTtcclxuICAgICAgICBcclxuICAgICAgICB0aGlzLmdyYWRFbGVtLmFwcGVuZENoaWxkKHRoaXMubWFyazEpO1xyXG4gICAgICAgIHRoaXMuZ3JhZEVsZW0uYXBwZW5kQ2hpbGQodGhpcy5tYXJrMik7XHJcbiAgICAgICAgdGhpcy5ncmFkRWxlbS5hcHBlbmRDaGlsZCh0aGlzLm1hcmszKTtcclxuICAgICAgICB0aGlzLmdyYWRFbGVtLmFwcGVuZENoaWxkKHRoaXMubWFyazQpO1xyXG5cclxuICAgICAgICB0aGlzLmluaXQgPSB0aGlzLmluaXQuYmluZCh0aGlzKTtcclxuICAgIH1cclxuICAgIGluaXQobWluVmFsdWU6IG51bWJlciwgbWF4VmFsdWU6IG51bWJlciwgdmVydGljYWw6IGJvb2xlYW4sIGZsb2F0ID0gZmFsc2UpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLm1hcmsxLmlubmVySFRNTCA9IG1pblZhbHVlICsgXCJcIjtcclxuICAgICAgICBpZiAoZmxvYXQpIHtcclxuICAgICAgICAgICAgdGhpcy5tYXJrMi5pbm5lckhUTUwgPSBtaW5WYWx1ZSArIHBhcnNlRmxvYXQoKChtYXhWYWx1ZSAtIG1pblZhbHVlKS8zKS50b0ZpeGVkKDIpKSArIFwiXCI7XHJcbiAgICAgICAgICAgIHRoaXMubWFyazMuaW5uZXJIVE1MID0gbWluVmFsdWUgKyBwYXJzZUZsb2F0KCgobWF4VmFsdWUgLSBtaW5WYWx1ZSkqMi8zKS50b0ZpeGVkKDIpKSArIFwiXCI7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgdGhpcy5tYXJrMi5pbm5lckhUTUwgPSBtaW5WYWx1ZSArIE1hdGgucm91bmQoKG1heFZhbHVlIC0gbWluVmFsdWUpLzMpICsgXCJcIjtcclxuICAgICAgICAgICAgdGhpcy5tYXJrMy5pbm5lckhUTUwgPSBtaW5WYWx1ZSArIE1hdGgucm91bmQoKG1heFZhbHVlIC0gbWluVmFsdWUpKjIvMykgKyBcIlwiO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLm1hcms0LmlubmVySFRNTCA9IG1heFZhbHVlICsgXCJcIjtcclxuICAgICAgICBcclxuXHJcbiAgICAgICAgaWYgKCF2ZXJ0aWNhbCkge1xyXG4gICAgICAgICAgICB0aGlzLm1hcmsxLnN0eWxlLm1hcmdpbkxlZnQgPSAtMTUgKyBcInB4XCI7XHJcbiAgICAgICAgICAgIHRoaXMubWFyazEuc3R5bGUubWFyZ2luVG9wID0gXCIwXCI7XHJcbiAgICAgICAgICAgIHRoaXMubWFyazQuc3R5bGUubWFyZ2luUmlnaHQgPSAtMTUgKyBcInB4XCI7XHJcbiAgICAgICAgICAgIHRoaXMubWFyazQuc3R5bGUubWFyZ2luVG9wID0gXCIwXCI7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgdGhpcy5tYXJrMS5zdHlsZS5tYXJnaW5Ub3AgPSAtOSAgKyBcInB4XCI7XHJcbiAgICAgICAgICAgIHRoaXMubWFyazEuc3R5bGUubWFyZ2luTGVmdCA9IFwiMFwiO1xyXG4gICAgICAgICAgICB0aGlzLm1hcms0LnN0eWxlLm1hcmdpbkJvdHRvbSA9IC05ICsgXCJweFwiO1xyXG4gICAgICAgICAgICB0aGlzLm1hcms0LnN0eWxlLm1hcmdpbkxlZnQgPSBcIjBcIjtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuXHJcbmNsYXNzIEJ1dHRvbiB7XHJcbiAgICBlbGVtOiBIVE1MRWxlbWVudDtcclxuICAgIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgICAgIHRoaXMuZWxlbSA9IGNyZWF0ZUVsZW0oXCJzbGlkZXJfX2J1dHRvblwiKTtcclxuICAgIH1cclxuICAgIGdldExlZnQoKTogbnVtYmVyIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5lbGVtLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLmxlZnQ7XHJcbiAgICB9XHJcbiAgICBnZXRXaWR0aCgpOiBudW1iZXIge1xyXG4gICAgICAgIHJldHVybiB0aGlzLmVsZW0uZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkud2lkdGg7XHJcbiAgICB9XHJcbiAgICBnZXRUb3AoKTogbnVtYmVyIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5lbGVtLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLnRvcDtcclxuICAgIH1cclxufVxyXG5cclxuY2xhc3MgTGFiZWwge1xyXG4gICAgZWxlbTogSFRNTEVsZW1lbnQ7XHJcbiAgICBjb25zdHJ1Y3RvcigpIHtcclxuICAgICAgICB0aGlzLmVsZW0gPSBjcmVhdGVFbGVtKFwic2xpZGVyX19idXR0b25fX2xhYmVsXCIpO1xyXG4gICAgfVxyXG4gICAgZ2V0V2lkdGgoKTogbnVtYmVyIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5lbGVtLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLndpZHRoO1xyXG4gICAgfVxyXG4gICAgZ2V0SGVpZ2h0KCk6IG51bWJlciB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuZWxlbS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS5oZWlnaHQ7XHJcbiAgICB9XHJcbn1cclxuXHJcbmNsYXNzIFNjYWxlRmlsbGluZyB7XHJcbiAgICBlbGVtOiBIVE1MRWxlbWVudDtcclxuICAgIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgICAgIHRoaXMuZWxlbSA9IGNyZWF0ZUVsZW0oXCJzbGlkZXJfX3NjYWxlX19maWxsaW5nXCIpO1xyXG4gICAgfVxyXG59XHJcblxyXG5jbGFzcyBWaWV3IHtcclxuICAgIFtpbmRleDogc3RyaW5nXTogbnVtYmVyfGJvb2xlYW58U2NhbGV8R3JhZHVhdGlvbnxTY2FsZUZpbGxpbmd8QnV0dG9ufExhYmVsfE1ha2VPYnNlcnZhYmxlT2JqZWN0fEZ1bmN0aW9uO1xyXG4gICAgc2NhbGU6IFNjYWxlO1xyXG4gICAgZ3JhZHVhdGlvbjogR3JhZHVhdGlvbjtcclxuICAgIHNjYWxlRmlsbGluZzogU2NhbGVGaWxsaW5nO1xyXG4gICAgYnV0dG9uMTogQnV0dG9uO1xyXG4gICAgYnV0dG9uMjogQnV0dG9uO1xyXG4gICAgbGFiZWwxOiBMYWJlbDtcclxuICAgIGxhYmVsMjogTGFiZWw7XHJcbiAgICByYW5nZTogYm9vbGVhbjtcclxuICAgIHZlcnRpY2FsOiBib29sZWFuO1xyXG4gICAgc2hvd0xhYmVsOiBib29sZWFuO1xyXG4gICAgbWluVmFsdWU6IG51bWJlcjtcclxuICAgIG1heFZhbHVlOiBudW1iZXI7XHJcbiAgICBjdXJNaW5WYWx1ZTogbnVtYmVyO1xyXG4gICAgY3VyTWF4VmFsdWU6IG51bWJlcjtcclxuICAgIHN0ZXA6IG51bWJlcjtcclxuICAgIGZsb2F0OiBib29sZWFuO1xyXG4gICAgb2JzZXJ2ZXJzOiBNYWtlT2JzZXJ2YWJsZU9iamVjdDtcclxuICAgIFxyXG5cclxuICAgIGNvbnN0cnVjdG9yKG1pblZhbHVlID0gMCwgbWF4VmFsdWUgPSAxMDAwLCBzdGVwID0gMSwgcmFuZ2UgPSBmYWxzZSwgdmVydGljYWwgPSBmYWxzZSwgc2hvd0xhYmVsID0gZmFsc2UsIGZsb2F0ID0gZmFsc2UpIHtcclxuXHJcbiAgICAgICAgdGhpcy5zY2FsZSA9IG5ldyBTY2FsZSgpO1xyXG4gICAgICAgIHRoaXMuYnV0dG9uMSA9IG5ldyBCdXR0b24oKTtcclxuICAgICAgICB0aGlzLmJ1dHRvbjIgPSBuZXcgQnV0dG9uKCk7XHJcbiAgICAgICAgdGhpcy5sYWJlbDEgPSBuZXcgTGFiZWwoKTtcclxuICAgICAgICB0aGlzLmxhYmVsMiA9IG5ldyBMYWJlbCgpO1xyXG4gICAgICAgIHRoaXMuc2NhbGVGaWxsaW5nID0gbmV3IFNjYWxlRmlsbGluZygpO1xyXG4gICAgICAgIHRoaXMuZ3JhZHVhdGlvbiA9IG5ldyBHcmFkdWF0aW9uKCk7XHJcbiAgICAgICAgdGhpcy5taW5WYWx1ZSA9IG1pblZhbHVlO1xyXG4gICAgICAgIHRoaXMubWF4VmFsdWUgPSBtYXhWYWx1ZTtcclxuICAgICAgICB0aGlzLmN1ck1pblZhbHVlID0gbWluVmFsdWU7XHJcbiAgICAgICAgdGhpcy5jdXJNYXhWYWx1ZSA9IG1heFZhbHVlO1xyXG4gICAgICAgIHRoaXMuc3RlcCA9IHN0ZXA7XHJcbiAgICAgICAgdGhpcy5yYW5nZSA9IHJhbmdlO1xyXG4gICAgICAgIHRoaXMudmVydGljYWwgPSB2ZXJ0aWNhbDtcclxuICAgICAgICB0aGlzLnNob3dMYWJlbCA9IHNob3dMYWJlbDtcclxuICAgICAgICB0aGlzLmZsb2F0ID0gZmxvYXQ7XHJcbiAgICAgICAgdGhpcy5vYnNlcnZlcnMgPSBuZXcgTWFrZU9ic2VydmFibGVPYmplY3QoKVxyXG4gICAgICAgIHRoaXMuY2hlY2tWYWx1ZXMoKTtcclxuICAgICAgICBcclxuICAgICAgICB0aGlzLmdldFN0YXJ0ID0gdGhpcy5nZXRTdGFydC5iaW5kKHRoaXMpO1xyXG4gICAgICAgIHRoaXMuZ2V0RW5kID0gdGhpcy5nZXRFbmQuYmluZCh0aGlzKTtcclxuICAgICAgICB0aGlzLnVwZGF0ZUVsZW1zID0gdGhpcy51cGRhdGVFbGVtcy5iaW5kKHRoaXMpO1xyXG4gICAgICAgIHRoaXMucm91bmQgPSB0aGlzLnJvdW5kLmJpbmQodGhpcyk7XHJcbiAgICAgICAgdGhpcy5yb3VuZE9mZnNldEJ1dHQgPSB0aGlzLnJvdW5kT2Zmc2V0QnV0dC5iaW5kKHRoaXMpO1xyXG4gICAgICAgIHRoaXMuY2hlY2tWYWx1ZXMgPSB0aGlzLmNoZWNrVmFsdWVzLmJpbmQodGhpcyk7XHJcbiAgICAgICAgdGhpcy5vZmZzZXRWYWx1ZUNvbnYgPSB0aGlzLm9mZnNldFZhbHVlQ29udi5iaW5kKHRoaXMpO1xyXG5cclxuICAgICAgICB0aGlzLmJ1dHQxTW92ZSA9IHRoaXMuYnV0dDFNb3ZlLmJpbmQodGhpcyk7XHJcbiAgICAgICAgdGhpcy5idXR0MU9mZnNldENoZWNrID0gdGhpcy5idXR0MU9mZnNldENoZWNrLmJpbmQodGhpcyk7XHJcbiAgICAgICAgdGhpcy5vbk1vdXNlTW92ZTEgPSB0aGlzLm9uTW91c2VNb3ZlMS5iaW5kKHRoaXMpO1xyXG4gICAgICAgIHRoaXMub25Nb3VzZVVwMSA9IHRoaXMub25Nb3VzZVVwMS5iaW5kKHRoaXMpO1xyXG5cclxuICAgICAgICB0aGlzLmJ1dHQyTW92ZSA9IHRoaXMuYnV0dDJNb3ZlLmJpbmQodGhpcyk7XHJcbiAgICAgICAgdGhpcy5idXR0Mk9mZnNldENoZWNrID0gdGhpcy5idXR0Mk9mZnNldENoZWNrLmJpbmQodGhpcyk7XHJcbiAgICAgICAgdGhpcy5vbk1vdXNlTW92ZTIgPSB0aGlzLm9uTW91c2VNb3ZlMi5iaW5kKHRoaXMpO1xyXG4gICAgICAgIHRoaXMub25Nb3VzZVVwMiA9IHRoaXMub25Nb3VzZVVwMi5iaW5kKHRoaXMpO1xyXG5cclxuICAgICAgICB0aGlzLnNjYWxlT25jbGljayA9IHRoaXMuc2NhbGVPbmNsaWNrLmJpbmQodGhpcyk7XHJcblxyXG4gICAgICAgIHRoaXMuaW50ZXJNYXJrSGFuZGxlciA9IHRoaXMuaW50ZXJNYXJrSGFuZGxlci5iaW5kKHRoaXMpO1xyXG4gICAgICAgIHRoaXMubWFyazFPbmNsaWNrID0gdGhpcy5tYXJrMU9uY2xpY2suYmluZCh0aGlzKTtcclxuICAgICAgICB0aGlzLm1hcmsyT25jbGljayA9IHRoaXMubWFyazJPbmNsaWNrLmJpbmQodGhpcyk7XHJcbiAgICAgICAgdGhpcy5tYXJrM09uY2xpY2sgPSB0aGlzLm1hcmszT25jbGljay5iaW5kKHRoaXMpO1xyXG4gICAgICAgIHRoaXMubWFyazRPbmNsaWNrID0gdGhpcy5tYXJrNE9uY2xpY2suYmluZCh0aGlzKTtcclxuXHJcbiAgICAgICAgdGhpcy5hcHBlbmQgPSB0aGlzLmFwcGVuZC5iaW5kKHRoaXMpO1xyXG4gICAgfVxyXG5cclxuICAgIGdldFN0YXJ0KCk6IG51bWJlciB7XHJcbiAgICAgICAgaWYgKHRoaXMucmFuZ2UpIHtcclxuICAgICAgICAgICAgaWYoIXRoaXMudmVydGljYWwpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmJ1dHRvbjEuZ2V0TGVmdCgpIC0gdGhpcy5zY2FsZS5nZXRMZWZ0KCkgKyB0aGlzLmJ1dHRvbjEuZ2V0V2lkdGgoKS8yO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuYnV0dG9uMS5nZXRUb3AoKSAtIHRoaXMuc2NhbGUuZ2V0VG9wKCkgKyB0aGlzLmJ1dHRvbjEuZ2V0V2lkdGgoKS8yO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgcmV0dXJuIDA7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGdldEVuZCgpOiBudW1iZXIge1xyXG4gICAgICAgIGlmKCF0aGlzLnZlcnRpY2FsKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmJ1dHRvbjIuZ2V0TGVmdCgpIC0gdGhpcy5zY2FsZS5nZXRMZWZ0KCkgKyB0aGlzLmJ1dHRvbjIuZ2V0V2lkdGgoKS8yO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmJ1dHRvbjIuZ2V0VG9wKCkgLSB0aGlzLnNjYWxlLmdldFRvcCgpICsgdGhpcy5idXR0b24yLmdldFdpZHRoKCkvMjtcclxuICAgICAgICB9IFxyXG4gICAgfVxyXG5cclxuICAgIHVwZGF0ZUVsZW1zKCk6IHZvaWQge1xyXG4gICAgICAgIGlmICh0aGlzLnZlcnRpY2FsKSB7XHJcbiAgICAgICAgICAgIHRoaXMuc2NhbGVGaWxsaW5nLmVsZW0uc3R5bGUudG9wID0gdGhpcy5nZXRTdGFydCgpICsgXCJweFwiO1xyXG4gICAgICAgICAgICB0aGlzLnNjYWxlRmlsbGluZy5lbGVtLnN0eWxlLmxlZnQgPSBcIjBcIjtcclxuICAgICAgICAgICAgdGhpcy5zY2FsZUZpbGxpbmcuZWxlbS5zdHlsZS5oZWlnaHQgPSB0aGlzLmdldEVuZCgpIC0gdGhpcy5nZXRTdGFydCgpICsgXCJweFwiO1xyXG4gICAgICAgICAgICB0aGlzLnNjYWxlRmlsbGluZy5lbGVtLnN0eWxlLndpZHRoID0gXCIxMDAlXCI7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgdGhpcy5zY2FsZUZpbGxpbmcuZWxlbS5zdHlsZS5sZWZ0ID0gdGhpcy5nZXRTdGFydCgpICsgXCJweFwiO1xyXG4gICAgICAgICAgICB0aGlzLnNjYWxlRmlsbGluZy5lbGVtLnN0eWxlLnRvcCA9IFwiMFwiO1xyXG4gICAgICAgICAgICB0aGlzLnNjYWxlRmlsbGluZy5lbGVtLnN0eWxlLndpZHRoID0gdGhpcy5nZXRFbmQoKSAtIHRoaXMuZ2V0U3RhcnQoKSArIFwicHhcIjtcclxuICAgICAgICAgICAgdGhpcy5zY2FsZUZpbGxpbmcuZWxlbS5zdHlsZS5oZWlnaHQgPSBcIjEwMCVcIjtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKCF0aGlzLnJhbmdlKSB7XHJcbiAgICAgICAgICAgIHRoaXMuY3VyTWluVmFsdWUgPSB0aGlzLm1pblZhbHVlO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLm9ic2VydmVycy5ub3RpZnlPYnNlcnZlcnMoKTtcclxuICAgIH1cclxuXHJcbiAgICByb3VuZCh2YWw6IG51bWJlciwgc3RlcDogbnVtYmVyKTogbnVtYmVyIHtcclxuICAgICAgICBjb25zdCB3aG9sZSA9IE1hdGguZmxvb3IodmFsL3N0ZXApO1xyXG4gICAgICAgIGNvbnN0IHJlbWluZGVyID0gdmFsICUgc3RlcDtcclxuICAgICAgICBpZiAodmFsIDwgMCkge1xyXG4gICAgICAgICAgICByZXR1cm4gTWF0aC5hYnMocmVtaW5kZXIpID4gc3RlcC8yID8gd2hvbGUqc3RlcCA6ICh3aG9sZSArIDEpKnN0ZXA7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiByZW1pbmRlciA8IHN0ZXAvMiA/IHdob2xlKnN0ZXAgOiAod2hvbGUgKyAxKSpzdGVwO1xyXG4gICAgfVxyXG5cclxuICAgIHJvdW5kT2Zmc2V0QnV0dChjdXJyT2Zmc2V0OiBudW1iZXIpOiBBcnJheTxudW1iZXI+IHtcclxuICAgICAgICBsZXQgc2NhbGVNZXNzdXJlO1xyXG4gICAgICAgIGlmKHRoaXMudmVydGljYWwpIHtcclxuICAgICAgICAgICAgc2NhbGVNZXNzdXJlID0gdGhpcy5zY2FsZS5nZXRIZWlnaHQoKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBzY2FsZU1lc3N1cmUgPSB0aGlzLnNjYWxlLmdldFdpZHRoKCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNvbnN0IGN1cnJWYWx1ZSA9IHRoaXMubWluVmFsdWUgKyAoY3Vyck9mZnNldCArIHRoaXMuYnV0dG9uMi5nZXRXaWR0aCgpLzIpKih0aGlzLm1heFZhbHVlIC0gdGhpcy5taW5WYWx1ZSkvc2NhbGVNZXNzdXJlO1xyXG4gICAgICAgIFxyXG4gICAgICAgIGxldCByb3VuZFZhbHVlID0gdGhpcy5yb3VuZChjdXJyVmFsdWUsIHRoaXMuc3RlcCk7XHJcbiAgICAgICAgaWYgKHRoaXMuZmxvYXQpIHtcclxuICAgICAgICAgICAgcm91bmRWYWx1ZSA9IHBhcnNlRmxvYXQocm91bmRWYWx1ZS50b0ZpeGVkKDIpKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKHJvdW5kVmFsdWUgPCB0aGlzLm1pblZhbHVlKSB7XHJcbiAgICAgICAgICAgIHJvdW5kVmFsdWUgPSB0aGlzLm1pblZhbHVlO1xyXG4gICAgICAgIH0gZWxzZSBpZiAocm91bmRWYWx1ZSA+IHRoaXMubWF4VmFsdWUpIHtcclxuICAgICAgICAgICAgcm91bmRWYWx1ZSA9IHRoaXMubWF4VmFsdWU7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgIGNvbnN0IHJvdW5kT2Zmc2V0ID0gKHJvdW5kVmFsdWUgLSB0aGlzLm1pblZhbHVlKSpzY2FsZU1lc3N1cmUvKHRoaXMubWF4VmFsdWUgLSB0aGlzLm1pblZhbHVlKSAtIHRoaXMuYnV0dG9uMi5nZXRXaWR0aCgpLzI7XHJcbiAgICAgICAgcmV0dXJuIFtyb3VuZE9mZnNldCwgcm91bmRWYWx1ZV07XHJcbiAgICB9XHJcblxyXG4gICAgb2Zmc2V0VmFsdWVDb252KHZhbHVlOiBudW1iZXIpOiBudW1iZXIge1xyXG4gICAgICAgIGlmICh0aGlzLnZlcnRpY2FsKSB7XHJcbiAgICAgICAgICAgIHJldHVybiAoKHZhbHVlIC0gdGhpcy5taW5WYWx1ZSkvKHRoaXMubWF4VmFsdWUgLSB0aGlzLm1pblZhbHVlKSp0aGlzLnNjYWxlLmdldEhlaWdodCgpIC0gdGhpcy5idXR0b24yLmdldFdpZHRoKCkvMik7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgcmV0dXJuICgodmFsdWUgLSB0aGlzLm1pblZhbHVlKS8odGhpcy5tYXhWYWx1ZSAtIHRoaXMubWluVmFsdWUpKnRoaXMuc2NhbGUuZ2V0V2lkdGgoKSAtIHRoaXMuYnV0dG9uMi5nZXRXaWR0aCgpLzIpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvL0J1dHRvbjEgIEhhbmRsZXJzLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gICAgYnV0dDFNb3ZlKHJvdW5kT2Zmc2V0OiBudW1iZXIsIHJvdW5kVmFsdWU6IG51bWJlcik6IHZvaWQge1xyXG4gICAgICAgIGlmICh0aGlzLnZlcnRpY2FsKSB7XHJcbiAgICAgICAgICAgIHRoaXMuYnV0dG9uMS5lbGVtLnN0eWxlLnRvcCA9IHJvdW5kT2Zmc2V0ICsgXCJweFwiO1xyXG4gICAgICAgICAgICB0aGlzLmxhYmVsMS5lbGVtLnN0eWxlLnRvcCA9IHJvdW5kT2Zmc2V0IC0gdGhpcy5sYWJlbDEuZ2V0SGVpZ2h0KCkvMiArIHRoaXMuYnV0dG9uMS5nZXRXaWR0aCgpLzIgKyBcInB4XCI7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgdGhpcy5idXR0b24xLmVsZW0uc3R5bGUubGVmdCA9IHJvdW5kT2Zmc2V0ICsgXCJweFwiO1xyXG4gICAgICAgICAgICB0aGlzLmxhYmVsMS5lbGVtLnN0eWxlLmxlZnQgPSByb3VuZE9mZnNldCAtIHRoaXMubGFiZWwxLmdldFdpZHRoKCkvMiArIHRoaXMuYnV0dG9uMS5nZXRXaWR0aCgpLzIgKyBcInB4XCI7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChyb3VuZFZhbHVlIDwgdGhpcy5taW5WYWx1ZSkge1xyXG4gICAgICAgICAgICByb3VuZFZhbHVlID0gdGhpcy5taW5WYWx1ZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5sYWJlbDEuZWxlbS5pbm5lckhUTUwgPSByb3VuZFZhbHVlICsgXCJcIjtcclxuICAgICAgICB0aGlzLmN1ck1pblZhbHVlID0gcm91bmRWYWx1ZTtcclxuICAgICAgICB0aGlzLnVwZGF0ZUVsZW1zKCk7XHJcbiAgICB9XHJcblxyXG4gICAgYnV0dDFPZmZzZXRDaGVjayhuZXdPZmZzZXQ6IG51bWJlcik6IEFycmF5PG51bWJlcj4ge1xyXG4gICAgICAgIGxldCByb3VuZFZhbHVlO1xyXG4gICAgICAgIGlmICh0aGlzLnZlcnRpY2FsKSB7XHJcbiAgICAgICAgICAgIGNvbnN0IHN0ZXBXaWR0aCA9IHRoaXMuc3RlcCp0aGlzLnNjYWxlLmdldEhlaWdodCgpLyh0aGlzLm1heFZhbHVlIC0gdGhpcy5taW5WYWx1ZSk7XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICBpZiAobmV3T2Zmc2V0IDwgLXRoaXMuYnV0dG9uMi5nZXRXaWR0aCgpLzIpIHtcclxuICAgICAgICAgICAgICAgIG5ld09mZnNldCA9IC10aGlzLmJ1dHRvbjIuZ2V0V2lkdGgoKS8yO1xyXG4gICAgICAgICAgICAgICAgcm91bmRWYWx1ZSA9IHRoaXMubWluVmFsdWU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKHN0ZXBXaWR0aC8xLjUgPiB0aGlzLmJ1dHRvbjIuZ2V0V2lkdGgoKSkge1xyXG4gICAgICAgICAgICAgICAgaWYgKG5ld09mZnNldCA+IHRoaXMuYnV0dG9uMi5nZXRUb3AoKSAtIHRoaXMuc2NhbGUuZ2V0VG9wKCkgLSBzdGVwV2lkdGgvMS41KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgbmV3T2Zmc2V0ID0gdGhpcy5idXR0b24yLmdldFRvcCgpIC0gdGhpcy5zY2FsZS5nZXRUb3AoKSAtIHN0ZXBXaWR0aC8xLjU7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBpZiAobmV3T2Zmc2V0ID4gdGhpcy5idXR0b24yLmdldFRvcCgpIC0gdGhpcy5zY2FsZS5nZXRUb3AoKSAtIHRoaXMuYnV0dG9uMi5nZXRXaWR0aCgpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgbmV3T2Zmc2V0ID0gdGhpcy5idXR0b24yLmdldFRvcCgpIC0gdGhpcy5zY2FsZS5nZXRUb3AoKSAtIHRoaXMuYnV0dG9uMi5nZXRXaWR0aCgpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgY29uc3Qgc3RlcFdpZHRoID0gdGhpcy5zdGVwKnRoaXMuc2NhbGUuZ2V0V2lkdGgoKS8odGhpcy5tYXhWYWx1ZSAtIHRoaXMubWluVmFsdWUpO1xyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgaWYgKG5ld09mZnNldCA8IC10aGlzLmJ1dHRvbjEuZ2V0V2lkdGgoKS8yKSB7XHJcbiAgICAgICAgICAgICAgICBuZXdPZmZzZXQgPSAtdGhpcy5idXR0b24xLmdldFdpZHRoKCkvMjtcclxuICAgICAgICAgICAgICAgIHJvdW5kVmFsdWUgPSB0aGlzLm1pblZhbHVlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmIChzdGVwV2lkdGgvMS41ID4gdGhpcy5idXR0b24xLmdldFdpZHRoKCkpIHtcclxuICAgICAgICAgICAgICAgIGlmIChuZXdPZmZzZXQgPiB0aGlzLmJ1dHRvbjIuZ2V0TGVmdCgpIC0gdGhpcy5zY2FsZS5nZXRMZWZ0KCkgLSBzdGVwV2lkdGgvMS41KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgbmV3T2Zmc2V0ID0gdGhpcy5idXR0b24yLmdldExlZnQoKSAtIHRoaXMuc2NhbGUuZ2V0TGVmdCgpIC0gc3RlcFdpZHRoLzEuNTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIGlmIChuZXdPZmZzZXQgPiB0aGlzLmJ1dHRvbjIuZ2V0TGVmdCgpIC0gdGhpcy5zY2FsZS5nZXRMZWZ0KCkgLSB0aGlzLmJ1dHRvbjIuZ2V0V2lkdGgoKSkge1xyXG4gICAgICAgICAgICAgICAgICAgIG5ld09mZnNldCA9IHRoaXMuYnV0dG9uMi5nZXRMZWZ0KCkgLSB0aGlzLnNjYWxlLmdldExlZnQoKSAtIHRoaXMuYnV0dG9uMi5nZXRXaWR0aCgpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBbbmV3T2Zmc2V0LCByb3VuZFZhbHVlXTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgb25Nb3VzZU1vdmUxKGV2ZW50TW06IE1vdXNlRXZlbnQpOiB2b2lkIHtcclxuICAgICAgICBsZXQgbmV3T2Zmc2V0LCByb3VuZFZhbHVlLCByb3VuZE9mZnNldDtcclxuICAgICAgICBcclxuICAgICAgICBpZiAodGhpcy52ZXJ0aWNhbCkge1xyXG4gICAgICAgICAgICBuZXdPZmZzZXQgPSBldmVudE1tLmNsaWVudFkgLSB0aGlzLnNjYWxlLmdldFRvcCgpIC0gdGhpcy5idXR0b24xLmdldFdpZHRoKCkvMjtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBuZXdPZmZzZXQgPSBldmVudE1tLmNsaWVudFggLSB0aGlzLnNjYWxlLmdldExlZnQoKSAtIHRoaXMuYnV0dG9uMS5nZXRXaWR0aCgpLzI7XHJcbiAgICAgICAgfSBcclxuICAgICAgICBbcm91bmRPZmZzZXQsIHJvdW5kVmFsdWVdID0gdGhpcy5idXR0MU9mZnNldENoZWNrKG5ld09mZnNldCk7XHJcbiAgICAgICAgaWYgKCFyb3VuZFZhbHVlKSB7XHJcbiAgICAgICAgICAgIFtyb3VuZE9mZnNldCwgcm91bmRWYWx1ZV0gPSB0aGlzLnJvdW5kT2Zmc2V0QnV0dChyb3VuZE9mZnNldCk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICB0aGlzLmJ1dHQxTW92ZShyb3VuZE9mZnNldCwgcm91bmRWYWx1ZSk7XHJcbiAgICB9XHJcblxyXG4gICAgb25Nb3VzZVVwMShldmVudE11OiBNb3VzZUV2ZW50KTogdm9pZCB7XHJcbiAgICAgICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcIm1vdXNldXBcIiwgdGhpcy5vbk1vdXNlVXAxKTtcclxuICAgICAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKFwibW91c2Vtb3ZlXCIsIHRoaXMub25Nb3VzZU1vdmUxKTtcclxuICAgIH1cclxuXHJcbiAgICAvL0J1dHRvbjIgIEhhbmRsZXJzLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gICAgYnV0dDJNb3ZlKHJvdW5kT2Zmc2V0OiBudW1iZXIsIHJvdW5kVmFsdWU6IG51bWJlcik6IHZvaWQge1xyXG4gICAgICAgIGlmICh0aGlzLnZlcnRpY2FsKSB7XHJcbiAgICAgICAgICAgIHRoaXMuYnV0dG9uMi5lbGVtLnN0eWxlLnRvcCA9IHJvdW5kT2Zmc2V0ICsgXCJweFwiO1xyXG4gICAgICAgICAgICB0aGlzLmxhYmVsMi5lbGVtLnN0eWxlLnRvcCA9IHJvdW5kT2Zmc2V0IC0gdGhpcy5sYWJlbDIuZ2V0SGVpZ2h0KCkvMiArIHRoaXMuYnV0dG9uMi5nZXRXaWR0aCgpLzIgKyBcInB4XCI7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgdGhpcy5idXR0b24yLmVsZW0uc3R5bGUubGVmdCA9IHJvdW5kT2Zmc2V0ICsgXCJweFwiO1xyXG4gICAgICAgICAgICB0aGlzLmxhYmVsMi5lbGVtLnN0eWxlLmxlZnQgPSByb3VuZE9mZnNldCAtIHRoaXMubGFiZWwyLmdldFdpZHRoKCkvMiArIHRoaXMuYnV0dG9uMi5nZXRXaWR0aCgpLzIgKyBcInB4XCI7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChyb3VuZFZhbHVlIDwgdGhpcy5taW5WYWx1ZSkge1xyXG4gICAgICAgICAgICByb3VuZFZhbHVlID0gdGhpcy5taW5WYWx1ZTtcclxuICAgICAgICB9IGVsc2UgaWYgKHJvdW5kVmFsdWUgPiB0aGlzLm1heFZhbHVlKSB7XHJcbiAgICAgICAgICAgIHJvdW5kVmFsdWUgPSB0aGlzLm1heFZhbHVlO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLmxhYmVsMi5lbGVtLmlubmVySFRNTCA9IHJvdW5kVmFsdWUgKyBcIlwiO1xyXG4gICAgICAgIHRoaXMuY3VyTWF4VmFsdWUgPSByb3VuZFZhbHVlO1xyXG4gICAgICAgIHRoaXMudXBkYXRlRWxlbXMoKTsgXHJcbiAgICB9XHJcblxyXG4gICAgYnV0dDJPZmZzZXRDaGVjayhuZXdPZmZzZXQ6IG51bWJlcik6IEFycmF5PG51bWJlcj4ge1xyXG4gICAgICAgIGxldCByb3VuZFZhbHVlO1xyXG5cclxuICAgICAgICBpZiAoIXRoaXMucmFuZ2UpIHtcclxuICAgICAgICAgICAgaWYgKG5ld09mZnNldCA8IC10aGlzLmJ1dHRvbjIuZ2V0V2lkdGgoKS8yKSB7XHJcbiAgICAgICAgICAgICAgICBuZXdPZmZzZXQgPSAtdGhpcy5idXR0b24yLmdldFdpZHRoKCkvMjtcclxuICAgICAgICAgICAgICAgIHJvdW5kVmFsdWUgPSB0aGlzLm1pblZhbHVlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmICh0aGlzLnZlcnRpY2FsKSB7XHJcbiAgICAgICAgICAgIGNvbnN0IHN0ZXBXaWR0aCA9IHRoaXMuc3RlcCp0aGlzLnNjYWxlLmdldEhlaWdodCgpLyh0aGlzLm1heFZhbHVlIC0gdGhpcy5taW5WYWx1ZSk7XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICBpZiAobmV3T2Zmc2V0ID4gdGhpcy5zY2FsZS5nZXRIZWlnaHQoKSAtIHRoaXMuYnV0dG9uMi5nZXRXaWR0aCgpLzIpIHtcclxuICAgICAgICAgICAgICAgIG5ld09mZnNldCA9IHRoaXMuc2NhbGUuZ2V0SGVpZ2h0KCkgLSB0aGlzLmJ1dHRvbjIuZ2V0V2lkdGgoKS8yO1xyXG4gICAgICAgICAgICAgICAgcm91bmRWYWx1ZSA9IHRoaXMubWF4VmFsdWU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIGlmIChzdGVwV2lkdGgvMS41ID4gdGhpcy5idXR0b24yLmdldFdpZHRoKCkpIHtcclxuICAgICAgICAgICAgICAgIGlmIChuZXdPZmZzZXQgPCB0aGlzLmJ1dHRvbjEuZ2V0VG9wKCkgLSB0aGlzLnNjYWxlLmdldFRvcCgpICsgc3RlcFdpZHRoLzEuNSkge1xyXG4gICAgICAgICAgICAgICAgICAgIG5ld09mZnNldCA9IHRoaXMuYnV0dG9uMS5nZXRUb3AoKSAtIHRoaXMuc2NhbGUuZ2V0VG9wKCkgKyBzdGVwV2lkdGgvMS41O1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgaWYgKG5ld09mZnNldCA8IHRoaXMuYnV0dG9uMS5nZXRUb3AoKSAtIHRoaXMuc2NhbGUuZ2V0VG9wKCkgKyB0aGlzLmJ1dHRvbjIuZ2V0V2lkdGgoKSkge1xyXG4gICAgICAgICAgICAgICAgICAgIG5ld09mZnNldCA9IHRoaXMuYnV0dG9uMS5nZXRUb3AoKSAtIHRoaXMuc2NhbGUuZ2V0VG9wKCkgKyB0aGlzLmJ1dHRvbjIuZ2V0V2lkdGgoKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIGNvbnN0IHN0ZXBXaWR0aCA9IHRoaXMuc3RlcCp0aGlzLnNjYWxlLmdldFdpZHRoKCkvKHRoaXMubWF4VmFsdWUgLSB0aGlzLm1pblZhbHVlKTtcclxuXHJcbiAgICAgICAgICAgIGlmIChuZXdPZmZzZXQgPiB0aGlzLnNjYWxlLmdldFdpZHRoKCkgLSB0aGlzLmJ1dHRvbjIuZ2V0V2lkdGgoKS8yKSB7XHJcbiAgICAgICAgICAgICAgICBuZXdPZmZzZXQgPSB0aGlzLnNjYWxlLmdldFdpZHRoKCkgLSB0aGlzLmJ1dHRvbjIuZ2V0V2lkdGgoKS8yO1xyXG4gICAgICAgICAgICAgICAgcm91bmRWYWx1ZSA9IHRoaXMubWF4VmFsdWU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKHN0ZXBXaWR0aC8xLjUgPiB0aGlzLmJ1dHRvbjIuZ2V0V2lkdGgoKSkge1xyXG4gICAgICAgICAgICAgICAgaWYgKG5ld09mZnNldCA8IHRoaXMuYnV0dG9uMS5nZXRMZWZ0KCkgLSB0aGlzLnNjYWxlLmdldExlZnQoKSArIHN0ZXBXaWR0aC8xLjUpIHtcclxuICAgICAgICAgICAgICAgICAgICBuZXdPZmZzZXQgPSB0aGlzLmJ1dHRvbjEuZ2V0TGVmdCgpIC0gdGhpcy5zY2FsZS5nZXRMZWZ0KCkgKyBzdGVwV2lkdGgvMS41O1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgaWYgKG5ld09mZnNldCA8IHRoaXMuYnV0dG9uMS5nZXRMZWZ0KCkgLSB0aGlzLnNjYWxlLmdldExlZnQoKSArIHRoaXMuYnV0dG9uMi5nZXRXaWR0aCgpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgbmV3T2Zmc2V0ID0gdGhpcy5idXR0b24xLmdldExlZnQoKSAtIHRoaXMuc2NhbGUuZ2V0TGVmdCgpICsgdGhpcy5idXR0b24yLmdldFdpZHRoKCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIFtuZXdPZmZzZXQsIHJvdW5kVmFsdWVdO1xyXG4gICAgfVxyXG5cclxuICAgIG9uTW91c2VNb3ZlMihldmVudE1tOiBNb3VzZUV2ZW50KTogdm9pZCB7XHJcbiAgICAgICAgbGV0IG5ld09mZnNldCwgcm91bmRWYWx1ZSwgcm91bmRPZmZzZXQ7XHJcbiAgICAgICAgXHJcbiAgICAgICAgaWYgKHRoaXMudmVydGljYWwpIHtcclxuICAgICAgICAgICAgbmV3T2Zmc2V0ID0gZXZlbnRNbS5jbGllbnRZIC0gdGhpcy5zY2FsZS5nZXRUb3AoKSAtIHRoaXMuYnV0dG9uMi5nZXRXaWR0aCgpLzI7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgbmV3T2Zmc2V0ID0gZXZlbnRNbS5jbGllbnRYIC0gdGhpcy5zY2FsZS5nZXRMZWZ0KCkgLSB0aGlzLmJ1dHRvbjIuZ2V0V2lkdGgoKS8yO1xyXG4gICAgICAgIH1cclxuICAgICAgICBbcm91bmRPZmZzZXQsIHJvdW5kVmFsdWVdID0gdGhpcy5idXR0Mk9mZnNldENoZWNrKG5ld09mZnNldCk7XHJcblxyXG4gICAgICAgIGlmICghcm91bmRWYWx1ZSkge1xyXG4gICAgICAgICAgICBbcm91bmRPZmZzZXQsIHJvdW5kVmFsdWVdID0gdGhpcy5yb3VuZE9mZnNldEJ1dHQocm91bmRPZmZzZXQpO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLmJ1dHQyTW92ZShyb3VuZE9mZnNldCwgcm91bmRWYWx1ZSk7XHJcbiAgICB9XHJcblxyXG4gICAgb25Nb3VzZVVwMihldmVudE11OiBNb3VzZUV2ZW50KTogdm9pZCB7XHJcbiAgICAgICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcIm1vdXNldXBcIiwgdGhpcy5vbk1vdXNlVXAyKTtcclxuICAgICAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKFwibW91c2Vtb3ZlXCIsIHRoaXMub25Nb3VzZU1vdmUyKTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgLy9TY2FsZSBFdmVudExpc3RlbmVycy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gICAgc2NhbGVPbmNsaWNrID0gKGV2ZW50OiBNb3VzZUV2ZW50KTogdm9pZCA9PiB7XHJcbiAgICAgICAgaWYodGhpcy5yYW5nZSkge1xyXG4gICAgICAgICAgICBsZXQgYnV0dDFDbG9zZXI7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLnZlcnRpY2FsKSB7XHJcbiAgICAgICAgICAgICAgICBidXR0MUNsb3NlciA9IE1hdGguYWJzKGV2ZW50LmNsaWVudFkgLSB0aGlzLmJ1dHRvbjEuZ2V0VG9wKCkgLSB0aGlzLmJ1dHRvbjEuZ2V0V2lkdGgoKS8yKSA8XHJcbiAgICAgICAgICAgICAgICAgICAgTWF0aC5hYnMoZXZlbnQuY2xpZW50WSAtIHRoaXMuYnV0dG9uMi5nZXRUb3AoKSAtIHRoaXMuYnV0dG9uMi5nZXRXaWR0aCgpLzIpO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgYnV0dDFDbG9zZXIgPSBNYXRoLmFicyhldmVudC5jbGllbnRYIC0gdGhpcy5idXR0b24xLmdldExlZnQoKSAtIHRoaXMuYnV0dG9uMS5nZXRXaWR0aCgpLzIpIDxcclxuICAgICAgICAgICAgICAgICAgICBNYXRoLmFicyhldmVudC5jbGllbnRYIC0gdGhpcy5idXR0b24yLmdldExlZnQoKSAtIHRoaXMuYnV0dG9uMi5nZXRXaWR0aCgpLzIpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmIChidXR0MUNsb3Nlcikge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMub25Nb3VzZU1vdmUxKGV2ZW50KTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHRoaXMub25Nb3VzZU1vdmUyKGV2ZW50KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHRoaXMub25Nb3VzZU1vdmUyKGV2ZW50KTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLy9HcmFkdWF0aW9uIEV2ZW50TGlzdGVuZXJzLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gICAgaW50ZXJNYXJrSGFuZGxlciAoY3VyclZhbHVlOiBudW1iZXIpOiB2b2lkIHtcclxuICAgICAgICBsZXQgcm91bmRPZmZzZXQsIHJvdW5kVmFsdWU7XHJcblxyXG4gICAgICAgIGlmICh0aGlzLnZlcnRpY2FsKSB7XHJcbiAgICAgICAgICAgIGNvbnN0IG1hcmtYID0gKGN1cnJWYWx1ZSAtIHRoaXMubWluVmFsdWUpLyh0aGlzLm1heFZhbHVlIC0gdGhpcy5taW5WYWx1ZSkqdGhpcy5zY2FsZS5nZXRIZWlnaHQoKTtcclxuICAgICAgICAgICAgW3JvdW5kT2Zmc2V0LCByb3VuZFZhbHVlXSA9IHRoaXMucm91bmRPZmZzZXRCdXR0KG1hcmtYIC0gdGhpcy5idXR0b24yLmdldFdpZHRoKCkvMik7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLnJhbmdlKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAoTWF0aC5hYnMobWFya1ggKyB0aGlzLnNjYWxlLmdldFRvcCgpIC0gdGhpcy5idXR0b24xLmdldFRvcCgpIC0gdGhpcy5idXR0b24yLmdldFdpZHRoKCkvMikgPFxyXG4gICAgICAgICAgICAgICAgTWF0aC5hYnMobWFya1ggKyB0aGlzLnNjYWxlLmdldFRvcCgpIC0gdGhpcy5idXR0b24yLmdldFRvcCgpIC0gdGhpcy5idXR0b24yLmdldFdpZHRoKCkvMikpXHJcbiAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5idXR0MU1vdmUocm91bmRPZmZzZXQsIHJvdW5kVmFsdWUpO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLmJ1dHQyTW92ZShyb3VuZE9mZnNldCwgcm91bmRWYWx1ZSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmJ1dHQyTW92ZShyb3VuZE9mZnNldCwgcm91bmRWYWx1ZSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBjb25zdCBtYXJrWCA9IChjdXJyVmFsdWUgLSB0aGlzLm1pblZhbHVlKS8odGhpcy5tYXhWYWx1ZSAtIHRoaXMubWluVmFsdWUpKnRoaXMuc2NhbGUuZ2V0V2lkdGgoKTtcclxuICAgICAgICAgICAgW3JvdW5kT2Zmc2V0LCByb3VuZFZhbHVlXSA9IHRoaXMucm91bmRPZmZzZXRCdXR0KG1hcmtYIC0gdGhpcy5idXR0b24yLmdldFdpZHRoKCkvMik7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLnJhbmdlKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAoTWF0aC5hYnMobWFya1ggKyB0aGlzLnNjYWxlLmdldExlZnQoKSAtIHRoaXMuYnV0dG9uMS5nZXRMZWZ0KCkgLSB0aGlzLmJ1dHRvbjIuZ2V0V2lkdGgoKS8yKSA8XHJcbiAgICAgICAgICAgICAgICBNYXRoLmFicyhtYXJrWCArIHRoaXMuc2NhbGUuZ2V0TGVmdCgpIC0gdGhpcy5idXR0b24yLmdldExlZnQoKSAtIHRoaXMuYnV0dG9uMi5nZXRXaWR0aCgpLzIpKVxyXG4gICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuYnV0dDFNb3ZlKHJvdW5kT2Zmc2V0LCByb3VuZFZhbHVlKTtcclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5idXR0Mk1vdmUocm91bmRPZmZzZXQsIHJvdW5kVmFsdWUpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5idXR0Mk1vdmUocm91bmRPZmZzZXQsIHJvdW5kVmFsdWUpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIG1hcmsxT25jbGljayA9IChldmVudDogTW91c2VFdmVudCk6IHZvaWQgPT4ge1xyXG4gICAgICAgIGNvbnN0IHJvdW5kT2Zmc2V0ID0gLXRoaXMuYnV0dG9uMi5nZXRXaWR0aCgpLzI7XHJcbiAgICAgICAgY29uc3Qgcm91bmRWYWx1ZSA9IHRoaXMubWluVmFsdWU7XHJcbiAgICAgICAgaWYgKCF0aGlzLnJhbmdlKSB7XHJcbiAgICAgICAgICAgIHRoaXMuYnV0dDJNb3ZlKHJvdW5kT2Zmc2V0LCByb3VuZFZhbHVlKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICB0aGlzLmJ1dHQxTW92ZShyb3VuZE9mZnNldCwgcm91bmRWYWx1ZSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIG1hcms0T25jbGljayA9IChldmVudDogTW91c2VFdmVudCk6IHZvaWQgPT4ge1xyXG4gICAgICAgIGlmICh0aGlzLnZlcnRpY2FsKSB7XHJcbiAgICAgICAgICAgIGNvbnN0IHJvdW5kT2Zmc2V0ID0gdGhpcy5zY2FsZS5nZXRIZWlnaHQoKSAtIHRoaXMuYnV0dG9uMi5nZXRXaWR0aCgpLzI7XHJcbiAgICAgICAgICAgIGNvbnN0IHJvdW5kVmFsdWUgPSB0aGlzLm1heFZhbHVlO1xyXG4gICAgICAgICAgICB0aGlzLmJ1dHQyTW92ZShyb3VuZE9mZnNldCwgcm91bmRWYWx1ZSk7IFxyXG4gICAgICAgICAgICBcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBjb25zdCByb3VuZE9mZnNldCA9IHRoaXMuc2NhbGUuZ2V0V2lkdGgoKSAtIHRoaXMuYnV0dG9uMi5nZXRXaWR0aCgpLzI7XHJcbiAgICAgICAgICAgIGNvbnN0IHJvdW5kVmFsdWUgPSB0aGlzLm1heFZhbHVlO1xyXG4gICAgICAgICAgICB0aGlzLmJ1dHQyTW92ZShyb3VuZE9mZnNldCwgcm91bmRWYWx1ZSk7IFxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBtYXJrMk9uY2xpY2sgPSAoZXZlbnQ6IE1vdXNlRXZlbnQpOiB2b2lkID0+IHtcclxuICAgICAgICBjb25zdCB2YWwgPSB0aGlzLmZsb2F0ID8gcGFyc2VGbG9hdCh0aGlzLmdyYWR1YXRpb24ubWFyazIuaW5uZXJIVE1MKSA6IHBhcnNlSW50KHRoaXMuZ3JhZHVhdGlvbi5tYXJrMi5pbm5lckhUTUwpO1xyXG4gICAgICAgIHRoaXMuaW50ZXJNYXJrSGFuZGxlcih2YWwpO1xyXG4gICAgfVxyXG5cclxuICAgIG1hcmszT25jbGljayA9IChldmVudDogTW91c2VFdmVudCk6IHZvaWQgPT4ge1xyXG4gICAgICAgIGNvbnN0IHZhbCA9IHRoaXMuZmxvYXQgPyBwYXJzZUZsb2F0KHRoaXMuZ3JhZHVhdGlvbi5tYXJrMy5pbm5lckhUTUwpIDogcGFyc2VJbnQodGhpcy5ncmFkdWF0aW9uLm1hcmszLmlubmVySFRNTCk7XHJcbiAgICAgICAgdGhpcy5pbnRlck1hcmtIYW5kbGVyKHZhbCk7XHJcbiAgICB9XHJcblxyXG4gICAgaW5pdCgpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLmJ1dHRvbjEuZWxlbS5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XHJcbiAgICAgICAgdGhpcy5sYWJlbDEuZWxlbS5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XHJcbiAgICAgICAgdGhpcy5ncmFkdWF0aW9uLmluaXQodGhpcy5taW5WYWx1ZSwgdGhpcy5tYXhWYWx1ZSwgdGhpcy52ZXJ0aWNhbCwgdGhpcy5mbG9hdCk7XHJcbiAgICAgICAgdGhpcy5jaGVja1ZhbHVlcygpO1xyXG5cclxuICAgICAgICBpZiAodGhpcy5zaG93TGFiZWwpIHtcclxuICAgICAgICAgICAgdGhpcy5sYWJlbDEuZWxlbS5zdHlsZS5kaXNwbGF5ID0gXCJibG9ja1wiO1xyXG4gICAgICAgICAgICB0aGlzLmxhYmVsMi5lbGVtLnN0eWxlLmRpc3BsYXkgPSBcImJsb2NrXCI7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgdGhpcy5sYWJlbDEuZWxlbS5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XHJcbiAgICAgICAgICAgIHRoaXMubGFiZWwyLmVsZW0uc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAodGhpcy5yYW5nZSkge1xyXG4gICAgICAgICAgICB0aGlzLmJ1dHRvbjEuZWxlbS5zdHlsZS5kaXNwbGF5ID0gXCJibG9ja1wiO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHRoaXMuYnV0dG9uMS5lbGVtLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcclxuICAgICAgICAgICAgdGhpcy5sYWJlbDEuZWxlbS5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpZiAodGhpcy52ZXJ0aWNhbCkge1xyXG4gICAgICAgICAgICB0aGlzLnNjYWxlLmVsZW0uY2xhc3NMaXN0LmFkZChcInNsaWRlcl9fc2NhbGVfdmVydGljYWxcIik7XHJcbiAgICAgICAgICAgIHRoaXMuc2NhbGVGaWxsaW5nLmVsZW0uY2xhc3NMaXN0LmFkZChcInNsaWRlcl9fc2NhbGVfX2ZpbGxpbmdfdmVydGljYWxcIik7XHJcbiAgICAgICAgICAgIHRoaXMuZ3JhZHVhdGlvbi5ncmFkRWxlbS5jbGFzc0xpc3QuYWRkKFwic2xpZGVyX19ncmFkdWF0aW9uX3ZlcnRpY2FsXCIpO1xyXG4gICAgICAgICAgICB0aGlzLmdyYWR1YXRpb24uZ3JhZEVsZW0uc3R5bGUuaGVpZ2h0ID0gdGhpcy5zY2FsZS5nZXRIZWlnaHQoKSArXCJweFwiO1xyXG4gICAgICAgICAgICB0aGlzLmJ1dHRvbjEuZWxlbS5jbGFzc0xpc3QuYWRkKFwic2xpZGVyX19idXR0b25fdmVydGljYWxcIik7XHJcbiAgICAgICAgICAgIHRoaXMuYnV0dG9uMi5lbGVtLmNsYXNzTGlzdC5hZGQoXCJzbGlkZXJfX2J1dHRvbl92ZXJ0aWNhbFwiKTtcclxuICAgICAgICAgICAgdGhpcy5sYWJlbDEuZWxlbS5jbGFzc0xpc3QuYWRkKFwic2xpZGVyX19idXR0b25fX2xhYmVsX3ZlcnRpY2FsXCIpO1xyXG4gICAgICAgICAgICB0aGlzLmxhYmVsMi5lbGVtLmNsYXNzTGlzdC5hZGQoXCJzbGlkZXJfX2J1dHRvbl9fbGFiZWxfdmVydGljYWxcIik7XHJcblxyXG4gICAgICAgICAgICB0aGlzLmJ1dHRvbjEuZWxlbS5zdHlsZS50b3AgPSAtdGhpcy5idXR0b24xLmdldFdpZHRoKCkvMiArIFwicHhcIjtcclxuICAgICAgICAgICAgdGhpcy5idXR0b24xLmVsZW0uc3R5bGUubGVmdCA9IFwiNTAlXCI7XHJcbiAgICAgICAgICAgIHRoaXMuYnV0dG9uMi5lbGVtLnN0eWxlLnRvcCA9IHRoaXMuc2NhbGUuZ2V0SGVpZ2h0KCkgLSB0aGlzLmJ1dHRvbjIuZ2V0V2lkdGgoKS8yICsgXCJweFwiO1xyXG4gICAgICAgICAgICB0aGlzLmJ1dHRvbjIuZWxlbS5zdHlsZS5sZWZ0ID0gXCI1MCVcIjtcclxuICAgICAgICAgICAgdGhpcy5sYWJlbDEuZWxlbS5pbm5lckhUTUwgPSB0aGlzLm1pblZhbHVlICsgXCJcIjtcclxuICAgICAgICAgICAgdGhpcy5sYWJlbDIuZWxlbS5pbm5lckhUTUwgPSB0aGlzLm1heFZhbHVlICsgXCJcIjtcclxuICAgICAgICAgICAgdGhpcy5sYWJlbDEuZWxlbS5zdHlsZS50b3AgPSB0aGlzLmdldFN0YXJ0KCkgLSB0aGlzLmxhYmVsMS5nZXRIZWlnaHQoKS8yICsgXCJweFwiO1xyXG4gICAgICAgICAgICB0aGlzLmxhYmVsMS5lbGVtLnN0eWxlLmxlZnQgPSBcIjUwJVwiO1xyXG4gICAgICAgICAgICB0aGlzLmxhYmVsMi5lbGVtLnN0eWxlLnRvcCA9IHRoaXMuZ2V0RW5kKCkgLSB0aGlzLmxhYmVsMi5nZXRIZWlnaHQoKS8yICsgXCJweFwiO1xyXG4gICAgICAgICAgICB0aGlzLmxhYmVsMi5lbGVtLnN0eWxlLmxlZnQgPSBcIjUwJVwiO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHRoaXMuc2NhbGUuZWxlbS5jbGFzc0xpc3QucmVtb3ZlKFwic2xpZGVyX19zY2FsZV92ZXJ0aWNhbFwiKTtcclxuICAgICAgICAgICAgdGhpcy5zY2FsZUZpbGxpbmcuZWxlbS5jbGFzc0xpc3QucmVtb3ZlKFwic2xpZGVyX19zY2FsZV9fZmlsbGluZ192ZXJ0aWNhbFwiKTtcclxuICAgICAgICAgICAgdGhpcy5ncmFkdWF0aW9uLmdyYWRFbGVtLmNsYXNzTGlzdC5yZW1vdmUoXCJzbGlkZXJfX2dyYWR1YXRpb25fdmVydGljYWxcIik7XHJcbiAgICAgICAgICAgIHRoaXMuZ3JhZHVhdGlvbi5ncmFkRWxlbS5zdHlsZS5oZWlnaHQgPSAyMCArXCJweFwiO1xyXG4gICAgICAgICAgICB0aGlzLmJ1dHRvbjEuZWxlbS5jbGFzc0xpc3QucmVtb3ZlKFwic2xpZGVyX19idXR0b25fdmVydGljYWxcIik7XHJcbiAgICAgICAgICAgIHRoaXMuYnV0dG9uMi5lbGVtLmNsYXNzTGlzdC5yZW1vdmUoXCJzbGlkZXJfX2J1dHRvbl92ZXJ0aWNhbFwiKTtcclxuICAgICAgICAgICAgdGhpcy5sYWJlbDEuZWxlbS5jbGFzc0xpc3QucmVtb3ZlKFwic2xpZGVyX19idXR0b25fX2xhYmVsX3ZlcnRpY2FsXCIpO1xyXG4gICAgICAgICAgICB0aGlzLmxhYmVsMi5lbGVtLmNsYXNzTGlzdC5yZW1vdmUoXCJzbGlkZXJfX2J1dHRvbl9fbGFiZWxfdmVydGljYWxcIik7XHJcblxyXG4gICAgICAgICAgICB0aGlzLmJ1dHRvbjEuZWxlbS5zdHlsZS5sZWZ0ID0gLXRoaXMuYnV0dG9uMS5nZXRXaWR0aCgpLzIgKyBcInB4XCI7XHJcbiAgICAgICAgICAgIHRoaXMuYnV0dG9uMS5lbGVtLnN0eWxlLnRvcCA9IFwiNTAlXCI7XHJcbiAgICAgICAgICAgIHRoaXMuYnV0dG9uMi5lbGVtLnN0eWxlLmxlZnQgPSB0aGlzLnNjYWxlLmdldFdpZHRoKCkgLSB0aGlzLmJ1dHRvbjIuZ2V0V2lkdGgoKS8yICsgXCJweFwiO1xyXG4gICAgICAgICAgICB0aGlzLmJ1dHRvbjIuZWxlbS5zdHlsZS50b3AgPSBcIjUwJVwiXHJcbiAgICAgICAgICAgIHRoaXMubGFiZWwxLmVsZW0uaW5uZXJIVE1MID0gdGhpcy5taW5WYWx1ZSArIFwiXCI7XHJcbiAgICAgICAgICAgIHRoaXMubGFiZWwyLmVsZW0uaW5uZXJIVE1MID0gdGhpcy5tYXhWYWx1ZSArIFwiXCI7XHJcbiAgICAgICAgICAgIHRoaXMubGFiZWwxLmVsZW0uc3R5bGUubGVmdCA9IHRoaXMuZ2V0U3RhcnQoKSAtIHRoaXMubGFiZWwxLmdldFdpZHRoKCkvMiArIFwicHhcIjtcclxuICAgICAgICAgICAgdGhpcy5sYWJlbDEuZWxlbS5zdHlsZS50b3AgPSBcIjUwJVwiO1xyXG4gICAgICAgICAgICB0aGlzLmxhYmVsMi5lbGVtLnN0eWxlLmxlZnQgPSB0aGlzLmdldEVuZCgpIC0gdGhpcy5sYWJlbDIuZ2V0V2lkdGgoKS8yICsgXCJweFwiO1xyXG4gICAgICAgICAgICB0aGlzLmxhYmVsMi5lbGVtLnN0eWxlLnRvcCA9IFwiNTAlXCI7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMudXBkYXRlRWxlbXMoKTtcclxuICAgIH1cclxuXHJcbiAgICBjaGVja1ZhbHVlcygpOiB2b2lkIHtcclxuICAgICAgICBpZiAodHlwZW9mIHRoaXMubWF4VmFsdWUgIT09IFwibnVtYmVyXCIpIHtcclxuICAgICAgICAgICAgY29uc29sZS5lcnJvcihcIk1heHZhbHVlIHNob3VsZCBiZSBhIG51bWJlclwiKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKHR5cGVvZiB0aGlzLm1pblZhbHVlICE9PSBcIm51bWJlclwiKSB7XHJcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoXCJNYXh2YWx1ZSBzaG91bGQgYmUgYSBudW1iZXJcIik7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmICh0eXBlb2YgdGhpcy5zdGVwICE9PSBcIm51bWJlclwiKSB7XHJcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoXCJTdGVwIHNob3VsZCBiZSBhIG51bWJlclwiKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKHR5cGVvZiB0aGlzLnJhbmdlICE9PSBcImJvb2xlYW5cIikge1xyXG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKFwiUmFuZ2Ugc2hvdWxkIGJlIGEgYm9vbGVhblwiKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKHR5cGVvZiB0aGlzLnZlcnRpY2FsICE9PSBcImJvb2xlYW5cIikge1xyXG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKFwiVmVydGljYWwgc2hvdWxkIGJlIGEgYm9vbGVhblwiKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKHR5cGVvZiB0aGlzLnNob3dMYWJlbCAhPT0gXCJib29sZWFuXCIpIHtcclxuICAgICAgICAgICAgY29uc29sZS5lcnJvcihcIlNob3dMYWJlbCBzaG91bGQgYmUgYSBib29sZWFuXCIpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAodGhpcy5zdGVwID4gdGhpcy5tYXhWYWx1ZSAtIHRoaXMubWluVmFsdWUpIHtcclxuICAgICAgICAgICAgdGhpcy5zdGVwID0gdGhpcy5tYXhWYWx1ZSAtIHRoaXMubWluVmFsdWU7XHJcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoXCJTdGVwIGlzIHNldHRlZCB0byB0aGUgbWF4XCIpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBhcHBlbmQoZW50cnk6IEhUTUxFbGVtZW50KTogdm9pZCB7XHJcbiAgICAgICAgZW50cnkuYXBwZW5kQ2hpbGQodGhpcy5zY2FsZS5lbGVtKS5hcHBlbmRDaGlsZCh0aGlzLnNjYWxlRmlsbGluZy5lbGVtKTtcclxuICAgICAgICBlbnRyeS5hcHBlbmRDaGlsZCh0aGlzLmJ1dHRvbjEuZWxlbSk7XHJcbiAgICAgICAgZW50cnkuYXBwZW5kQ2hpbGQodGhpcy5sYWJlbDEuZWxlbSk7XHJcbiAgICAgICAgZW50cnkuYXBwZW5kQ2hpbGQodGhpcy5ncmFkdWF0aW9uLmdyYWRFbGVtKTtcclxuICAgICAgICBlbnRyeS5hcHBlbmRDaGlsZCh0aGlzLmJ1dHRvbjIuZWxlbSk7XHJcbiAgICAgICAgZW50cnkuYXBwZW5kQ2hpbGQodGhpcy5sYWJlbDIuZWxlbSk7XHJcblxyXG4gICAgICAgIHRoaXMuc2NhbGUuZWxlbS5vbmNsaWNrID0gdGhpcy5zY2FsZU9uY2xpY2s7XHJcbiAgICAgICAgdGhpcy5ncmFkdWF0aW9uLm1hcmsxLm9uY2xpY2sgPSB0aGlzLm1hcmsxT25jbGljaztcclxuICAgICAgICB0aGlzLmdyYWR1YXRpb24ubWFyazIub25jbGljayA9IHRoaXMubWFyazJPbmNsaWNrO1xyXG4gICAgICAgIHRoaXMuZ3JhZHVhdGlvbi5tYXJrMy5vbmNsaWNrID0gdGhpcy5tYXJrM09uY2xpY2s7XHJcbiAgICAgICAgdGhpcy5ncmFkdWF0aW9uLm1hcms0Lm9uY2xpY2sgPSB0aGlzLm1hcms0T25jbGljaztcclxuICAgICAgICB0aGlzLmJ1dHRvbjEuZWxlbS5vbm1vdXNlZG93biA9IChldmVudE1kOiBNb3VzZUV2ZW50KSA9PiB7XHJcbiAgICAgICAgICAgIGV2ZW50TWQucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNlbW92ZVwiLCB0aGlzLm9uTW91c2VNb3ZlMSk7XHJcbiAgICAgICAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZXVwXCIsIHRoaXMub25Nb3VzZVVwMSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuYnV0dG9uMi5lbGVtLm9ubW91c2Vkb3duID0gKGV2ZW50TWQ6IE1vdXNlRXZlbnQpID0+IHtcclxuICAgICAgICAgICAgZXZlbnRNZC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwibW91c2Vtb3ZlXCIsIHRoaXMub25Nb3VzZU1vdmUyKTtcclxuICAgICAgICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNldXBcIiwgdGhpcy5vbk1vdXNlVXAyKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuXHJcbmV4cG9ydCB7Y3JlYXRlRWxlbSwgU2NhbGUsIExhYmVsLCBCdXR0b24sIFNjYWxlRmlsbGluZywgVmlldywgR3JhZHVhdGlvbn07XHJcblxyXG5cclxuXHJcblxyXG4iLCJpbXBvcnQge01ha2VPYnNlcnZhYmxlT2JqZWN0fSBmcm9tIFwiLi9NT09cIjtcclxuXHJcbmNsYXNzIE1vZGVsIHtcclxuICAgIGN1ck1pblZhbHVlOiBudW1iZXI7XHJcbiAgICBjdXJNYXhWYWx1ZTogbnVtYmVyO1xyXG4gICAgb2JzZXJ2ZXJzOiBNYWtlT2JzZXJ2YWJsZU9iamVjdDtcclxuXHJcbiAgICBjb25zdHJ1Y3RvcihjdXJNaW5WYWx1ZSA9IDAsIGN1ck1heFZhbHVlID0gMTAwMCkge1xyXG4gICAgICAgIHRoaXMuY3VyTWluVmFsdWUgPSBjdXJNaW5WYWx1ZTtcclxuICAgICAgICB0aGlzLmN1ck1heFZhbHVlID0gY3VyTWF4VmFsdWU7XHJcbiAgICAgICAgdGhpcy5vYnNlcnZlcnMgPSBuZXcgTWFrZU9ic2VydmFibGVPYmplY3QoKTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgc2V0Q3VyTWluVmFsdWUoZGF0YTogbnVtYmVyKTogdm9pZCB7XHJcbiAgICAgICAgaWYgKHRoaXMuY3VyTWluVmFsdWUgIT0gZGF0YSkge1xyXG4gICAgICAgICAgICB0aGlzLmN1ck1pblZhbHVlID0gZGF0YTtcclxuICAgICAgICAgICAgdGhpcy5vYnNlcnZlcnMubm90aWZ5T2JzZXJ2ZXJzKCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgc2V0Q3VyTWF4VmFsdWUoZGF0YTogbnVtYmVyKTogdm9pZCB7XHJcbiAgICAgICAgaWYgKHRoaXMuY3VyTWF4VmFsdWUgIT0gZGF0YSkge1xyXG4gICAgICAgICAgICB0aGlzLmN1ck1heFZhbHVlID0gZGF0YTtcclxuICAgICAgICAgICAgdGhpcy5vYnNlcnZlcnMubm90aWZ5T2JzZXJ2ZXJzKCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQge01vZGVsfTsiLCJpbXBvcnQgeyBWaWV3IH0gZnJvbSBcIi4vdmlld1wiO1xyXG5pbXBvcnQgeyBNb2RlbCB9IGZyb20gXCIuL21vZGVsXCI7XHJcbmltcG9ydCB7TWFrZU9ic2VydmFibGVPYmplY3R9IGZyb20gXCIuL01PT1wiO1xyXG5cclxuaW50ZXJmYWNlIGNvbmZpZ1R5cGUge1xyXG4gICAgW2luZGV4OiBzdHJpbmddOiBudW1iZXIgfCBib29sZWFuO1xyXG59XHJcblxyXG5jbGFzcyBDb250cm9sbGVyIHtcclxuICAgIHZpZXc6IFZpZXc7XHJcbiAgICBtb2RlbDogTW9kZWw7XHJcbiAgICBvYnNlcnZlcnM6IE1ha2VPYnNlcnZhYmxlT2JqZWN0O1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKG1pblZhbHVlID0gMCwgbWF4VmFsdWUgPSAxMDAwLCBzdGVwID0gMSwgcmFuZ2UgPSBmYWxzZSwgdmVydGljYWwgPSBmYWxzZSwgc2hvd0xhYmVsID0gZmFsc2UsIGZsb2F0ID0gZmFsc2UpIHtcclxuICAgICAgICB0aGlzLnZpZXcgPSBuZXcgVmlldyhtaW5WYWx1ZSwgbWF4VmFsdWUsIHN0ZXAsIHJhbmdlLCB2ZXJ0aWNhbCwgc2hvd0xhYmVsLCBmbG9hdCk7XHJcbiAgICAgICAgdGhpcy5tb2RlbCA9IG5ldyBNb2RlbChtaW5WYWx1ZSwgbWF4VmFsdWUpO1xyXG4gICAgICAgIHRoaXMub2JzZXJ2ZXJzID0gbmV3IE1ha2VPYnNlcnZhYmxlT2JqZWN0KCk7XHJcblxyXG4gICAgICAgIHRoaXMudmlldy5vYnNlcnZlcnMuYWRkT2JzZXJ2ZXIoKCkgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLm1vZGVsLmN1ck1pblZhbHVlID0gdGhpcy52aWV3LmN1ck1pblZhbHVlO1xyXG4gICAgICAgICAgICB0aGlzLm1vZGVsLmN1ck1heFZhbHVlID0gdGhpcy52aWV3LmN1ck1heFZhbHVlO1xyXG4gICAgICAgICAgICB0aGlzLm9ic2VydmVycy5ub3RpZnlPYnNlcnZlcnMoKTtcclxuICAgICAgICB9KTtcclxuICAgICAgICB0aGlzLm1vZGVsLm9ic2VydmVycy5hZGRPYnNlcnZlcigoKSA9PiB7XHJcbiAgICAgICAgICAgIGNvbnN0IGN1ck1pblZhbHVlID0gdGhpcy5tb2RlbC5jdXJNaW5WYWx1ZTtcclxuICAgICAgICAgICAgY29uc3QgY3VyTWF4VmFsdWUgPSB0aGlzLm1vZGVsLmN1ck1heFZhbHVlO1xyXG4gICAgICAgICAgICB0aGlzLnZpZXcuYnV0dDFNb3ZlKHRoaXMudmlldy5vZmZzZXRWYWx1ZUNvbnYoY3VyTWluVmFsdWUpLCBjdXJNaW5WYWx1ZSk7XHJcbiAgICAgICAgICAgIHRoaXMudmlldy5idXR0Mk1vdmUodGhpcy52aWV3Lm9mZnNldFZhbHVlQ29udihjdXJNYXhWYWx1ZSksIGN1ck1heFZhbHVlKTtcclxuICAgICAgICAgICAgdGhpcy5vYnNlcnZlcnMubm90aWZ5T2JzZXJ2ZXJzKCk7XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIHRoaXMudXBkYXRlID0gdGhpcy51cGRhdGUuYmluZCh0aGlzKTtcclxuICAgICAgICB0aGlzLmdldFZhbHVlcyA9IHRoaXMuZ2V0VmFsdWVzLmJpbmQodGhpcyk7XHJcbiAgICAgICAgdGhpcy5nZXRDb25maWcgPSB0aGlzLmdldENvbmZpZy5iaW5kKHRoaXMpO1xyXG4gICAgICAgIHRoaXMuYWRkT2JzZXJ2ZXIgPSB0aGlzLmFkZE9ic2VydmVyLmJpbmQodGhpcyk7XHJcbiAgICB9XHJcbiAgICBhcHBlbmQoZW50cnk6IEpRdWVyeSk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMudmlldy5hcHBlbmQoZW50cnkuZ2V0KDApKTtcclxuICAgICAgICB0aGlzLnZpZXcuaW5pdCgpO1xyXG4gICAgfVxyXG4gICAgdXBkYXRlKGFyZ3M6IGNvbmZpZ1R5cGUpOiB2b2lkIHtcclxuICAgICAgICBPYmplY3Qua2V5cyhhcmdzKS5tYXAoKGl0ZW0pICA9PiB7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLnZpZXdbaXRlbV0gIT09IHVuZGVmaW5lZCkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy52aWV3W2l0ZW1dID0gYXJnc1tpdGVtXTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHRoaXMudmlldy5pbml0KCk7XHJcbiAgICAgICAgdGhpcy52aWV3LmJ1dHQxTW92ZSh0aGlzLnZpZXcuYnV0dDFPZmZzZXRDaGVjayh0aGlzLnZpZXcub2Zmc2V0VmFsdWVDb252KHRoaXMubW9kZWwuY3VyTWluVmFsdWUpKVswXSwgdGhpcy5tb2RlbC5jdXJNaW5WYWx1ZSk7XHJcbiAgICAgICAgdGhpcy52aWV3LmJ1dHQyTW92ZSh0aGlzLnZpZXcuYnV0dDJPZmZzZXRDaGVjayh0aGlzLnZpZXcub2Zmc2V0VmFsdWVDb252KHRoaXMubW9kZWwuY3VyTWF4VmFsdWUpKVswXSwgdGhpcy5tb2RlbC5jdXJNYXhWYWx1ZSk7XHJcbiAgICB9XHJcbiAgICBnZXRWYWx1ZXMoKTogQXJyYXk8bnVtYmVyPiB7XHJcbiAgICAgICAgcmV0dXJuIFt0aGlzLm1vZGVsLmN1ck1pblZhbHVlLCB0aGlzLm1vZGVsLmN1ck1heFZhbHVlXTtcclxuICAgIH1cclxuICAgIHNldFZhbHVlcyhjdXJNaW5WYWx1ZTogbnVtYmVyLCBjdXJNYXhWYWx1ZTogbnVtYmVyKTogdm9pZCB7XHJcbiAgICAgICAgaWYgKGN1ck1pblZhbHVlKSB7XHJcbiAgICAgICAgICAgIHRoaXMubW9kZWwuc2V0Q3VyTWluVmFsdWUoY3VyTWluVmFsdWUpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoY3VyTWF4VmFsdWUpIHtcclxuICAgICAgICAgICAgdGhpcy5tb2RlbC5zZXRDdXJNYXhWYWx1ZShjdXJNYXhWYWx1ZSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgZ2V0Q29uZmlnKCk6IGNvbmZpZ1R5cGUge1xyXG4gICAgICAgIHJldHVybiB7bWluVmFsdWU6IHRoaXMudmlldy5taW5WYWx1ZSwgbWF4VmFsdWU6IHRoaXMudmlldy5tYXhWYWx1ZSwgc3RlcDogdGhpcy52aWV3LnN0ZXAsXHJcbiAgICAgICAgICAgIHJhbmdlOiB0aGlzLnZpZXcucmFuZ2UsIHZlcnRpY2FsOiB0aGlzLnZpZXcudmVydGljYWwsIHNob3dMYWJlbDogdGhpcy52aWV3LnNob3dMYWJlbCwgZmxvYXQ6IHRoaXMudmlldy5mbG9hdH1cclxuICAgIH1cclxuICAgIGFkZE9ic2VydmVyKGZuOiBGdW5jdGlvbik6IHZvaWQge1xyXG4gICAgICAgIHRoaXMub2JzZXJ2ZXJzLmFkZE9ic2VydmVyKGZuKTtcclxuICAgIH1cclxufVxyXG5leHBvcnQge0NvbnRyb2xsZXJ9OyIsImltcG9ydCB7Q29udHJvbGxlcn0gZnJvbSBcIi4vY29udHJvbGxlci50c1wiO1xyXG5cclxuKGZ1bmN0aW9uKCQpIHtcclxuICAgIFxyXG4gICAgY29uc3QgY29uZmlnID0ge1xyXG4gICAgICAgIG1pblZhbHVlOiAwLFxyXG4gICAgICAgIG1heFZhbHVlOiAxMDAwLFxyXG4gICAgICAgIHN0ZXA6IDEsXHJcbiAgICAgICAgcmFuZ2U6IGZhbHNlLFxyXG4gICAgICAgIHZlcnRpY2FsOiBmYWxzZSxcclxuICAgICAgICBzaG93TGFiZWw6IGZhbHNlLFxyXG4gICAgICAgIGZsb2F0OiBmYWxzZSxcclxuICAgIH07XHJcbiAgICBjb25zdCBtZXRob2RzID0ge1xyXG4gICAgICAgIGluaXQ6IGZ1bmN0aW9uKG9wdCkge1xyXG4gICAgICAgICAgICBpZiAoISQodGhpcykuZGF0YShcInNsaWRlclwiKSkge1xyXG4gICAgICAgICAgICAgICAgY29uc3QgbmV3Q29uZmlnID0gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShjb25maWcpKTtcclxuICAgICAgICAgICAgICAgIGNvbnN0IHNsaWRlciA9IG5ldyBDb250cm9sbGVyKC4uLk9iamVjdC52YWx1ZXMoJC5leHRlbmQobmV3Q29uZmlnLCBvcHQpKSk7XHJcbiAgICAgICAgICAgICAgICAkKHRoaXMpLmRhdGEoXCJzbGlkZXJcIiwgc2xpZGVyKTtcclxuICAgICAgICAgICAgICAgIHNsaWRlci5hcHBlbmQoJCh0aGlzKSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9LFxyXG4gICAgICAgIHVwZGF0ZTogZnVuY3Rpb24ob3B0KSB7XHJcbiAgICAgICAgICAgIGNvbnN0IHNsaWRlciA9ICQodGhpcykuZGF0YShcInNsaWRlclwiKTtcclxuICAgICAgICAgICAgc2xpZGVyLnVwZGF0ZShvcHQpO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgZ2V0Q29uZmlnOiBmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgY29uc3Qgc2xpZGVyID0gJCh0aGlzKS5kYXRhKFwic2xpZGVyXCIpO1xyXG4gICAgICAgICAgICByZXR1cm4gc2xpZGVyLmdldENvbmZpZygpO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgc2V0VmFsdWVzOiBmdW5jdGlvbihvcHQpIHtcclxuICAgICAgICAgICAgY29uc3Qgc2xpZGVyID0gJCh0aGlzKS5kYXRhKFwic2xpZGVyXCIpO1xyXG4gICAgICAgICAgICBzbGlkZXIuc2V0VmFsdWVzKG9wdC5jdXJNaW5WYWx1ZSwgb3B0LmN1ck1heFZhbHVlKTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIGlucHV0c0F0dGFjaDogZnVuY3Rpb24ob3B0KSB7XHJcbiAgICAgICAgICAgIGNvbnN0IHNsaWRlciA9ICQodGhpcykuZGF0YShcInNsaWRlclwiKTtcclxuICAgICAgICAgICAgc2xpZGVyLmFkZE9ic2VydmVyKCgpID0+IHtcclxuICAgICAgICAgICAgICAgIG9wdC5taW5WYWx1ZUluLnZhbChzbGlkZXIuZ2V0VmFsdWVzKClbMF0pO1xyXG4gICAgICAgICAgICAgICAgb3B0Lm1heFZhbHVlSW4udmFsKHNsaWRlci5nZXRWYWx1ZXMoKVsxXSk7XHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgfSxcclxuICAgIH1cclxuICAgIFxyXG4gICAgJC5mbi5vbWZnc2xpZGVyID0gZnVuY3Rpb24obWV0aG9kKSB7XHJcbiAgICAgICAgaWYgKCBtZXRob2RzW21ldGhvZF0gKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBtZXRob2RzWyBtZXRob2QgXS5hcHBseSggdGhpcywgQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoIGFyZ3VtZW50cywgMSApKTtcclxuICAgICAgICB9IGVsc2UgaWYgKCB0eXBlb2YgbWV0aG9kID09PSAnb2JqZWN0JyB8fCAhIG1ldGhvZCApIHtcclxuICAgICAgICAgICAgcmV0dXJuIG1ldGhvZHMuaW5pdC5hcHBseSggdGhpcywgYXJndW1lbnRzICk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgJC5lcnJvciggJ9Cc0LXRgtC+0LQgXCInICsgIG1ldGhvZCArICdcIiDQvdC1INC90LDQudC00LXQvSDQsiDQv9C70LDQs9C40L3QtSBqUXVlcnkubXlTaW1wbGVQbHVnaW4nICk7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuICAgIFxyXG59KShqUXVlcnkpOyJdLCJzb3VyY2VSb290IjoiIn0=