!function(e){var t={};function i(n){if(t[n])return t[n].exports;var l=t[n]={i:n,l:!1,exports:{}};return e[n].call(l.exports,l,l.exports,i),l.l=!0,l.exports}i.m=e,i.c=t,i.d=function(e,t,n){i.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},i.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.t=function(e,t){if(1&t&&(e=i(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(i.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var l in e)i.d(n,l,function(t){return e[t]}.bind(null,l));return n},i.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(t,"a",t),t},i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},i.p="",i(i.s=1)}([function(e,t,i){},function(e,t,i){"use strict";i.r(t);i.p,i(0);var n=function(){for(var e=0,t=0,i=arguments.length;t<i;t++)e+=arguments[t].length;var n=Array(e),l=0;for(t=0;t<i;t++)for(var a=arguments[t],o=0,s=a.length;o<s;o++,l++)n[l]=a[o];return n},l=function(){function e(){this.observers=[]}return e.prototype.addObserver=function(e){if("function"!=typeof e)throw new Error("observer must be a function");this.observers.map((function(t){if(t===e)throw new Error("observer already in the list")})),this.observers.push(e)},e.prototype.removeObserver=function(e){for(var t=0;t<this.observers.length;t++){if(this.observers[t]===e)return void this.observers.splice(t,1)}throw new Error("could not find observer in list of observers")},e.prototype.notifyObservers=function(){n(this.observers).map((function(e){return e()}))},e}();var a=function(e){var t=document.createElement("div");return t.ondragstart=function(){return!1},t.classList.add(e),t},o=function(){function e(){this.elem=a("slider__scale")}return e.prototype.getLeft=function(){return this.elem.getBoundingClientRect().left},e.prototype.getWidth=function(){return this.elem.getBoundingClientRect().width},e.prototype.getHeight=function(){return this.elem.getBoundingClientRect().height},e.prototype.getTop=function(){return this.elem.getBoundingClientRect().top},e}(),s=function(){function e(){this.gradElem=a("slider__graduation"),this.mark1=a("slider__graduation-mark"),this.mark2=a("slider__graduation-mark"),this.mark3=a("slider__graduation-mark"),this.mark4=a("slider__graduation-mark"),this.gradElem.appendChild(this.mark1),this.gradElem.appendChild(this.mark2),this.gradElem.appendChild(this.mark3),this.gradElem.appendChild(this.mark4),this.init=this.init.bind(this)}return e.prototype.init=function(e,t,i,n){void 0===n&&(n=!1),this.mark1.innerHTML=e+"",this.mark4.innerHTML=t+"",n?(this.mark2.innerHTML=(e+(t-e)/3).toFixed(2),this.mark3.innerHTML=(e+2*(t-e)/3).toFixed(2)):(this.mark2.innerHTML=e+Math.round((t-e)/3)+"",this.mark3.innerHTML=e+Math.round(2*(t-e)/3)+""),i?(this.mark1.style.marginTop="-9px",this.mark1.style.marginLeft="0",this.mark4.style.marginBottom="-9px",this.mark4.style.marginRight="0"):(this.mark1.style.marginLeft="-15px",this.mark1.style.marginTop="0",this.mark4.style.marginRight="-15px",this.mark4.style.marginBottom="0")},e}(),r=function(){function e(){this.elem=a("slider__button")}return e.prototype.getLeft=function(){return this.elem.getBoundingClientRect().left},e.prototype.getWidth=function(){return this.elem.getBoundingClientRect().width},e.prototype.getTop=function(){return this.elem.getBoundingClientRect().top},e}(),u=function(){function e(){this.elem=a("slider__button-label")}return e.prototype.getWidth=function(){return this.elem.getBoundingClientRect().width},e.prototype.getHeight=function(){return this.elem.getBoundingClientRect().height},e}(),c=function(){this.elem=a("slider__scale-filling")},d=function(e,t,i,n,a,d,g){var h=this;void 0===e&&(e=0),void 0===t&&(t=1e3),void 0===i&&(i=1),void 0===n&&(n=!1),void 0===a&&(a=!1),void 0===d&&(d=!1),void 0===g&&(g=!1),this.getStart=function(){return h.range?h.isVertical?h.button1.getTop()-h.scale.getTop()+h.button1.getWidth()/2:h.button1.getLeft()-h.scale.getLeft()+h.button1.getWidth()/2:0},this.getEnd=function(){return h.isVertical?h.button2.getTop()-h.scale.getTop()+h.button2.getWidth()/2:h.button2.getLeft()-h.scale.getLeft()+h.button2.getWidth()/2},this.updateElems=function(){h.isVertical?(h.scaleFilling.elem.style.top=h.getStart()+"px",h.scaleFilling.elem.style.left="0",h.scaleFilling.elem.style.height=h.getEnd()-h.getStart()+"px",h.scaleFilling.elem.style.width="100%"):(h.scaleFilling.elem.style.left=h.getStart()+"px",h.scaleFilling.elem.style.top="0",h.scaleFilling.elem.style.width=h.getEnd()-h.getStart()+"px",h.scaleFilling.elem.style.height="100%"),h.range||(h.curMinValue=h.minValue),h.observers.notifyObservers()},this.round=function(e,t){var i=Math.floor(e/t),n=e%t;return e<0?Math.abs(n)>t/2?i*t:(i+1)*t:n<t/2?i*t:(i+1)*t},this.roundOffsetButt=function(e){var t;t=h.isVertical?h.scale.getHeight():h.scale.getWidth();var i=h.minValue+(e+h.button2.getWidth()/2)*(h.maxValue-h.minValue)/t,n=h.round(i,h.step);return h.float&&(n=parseFloat(n.toFixed(2))),n<h.minValue?n=h.minValue:n>h.maxValue&&(n=h.maxValue),[(n-h.minValue)*t/(h.maxValue-h.minValue)-h.button2.getWidth()/2,n]},this.offsetValueConv=function(e){return h.isVertical?(e-h.minValue)/(h.maxValue-h.minValue)*h.scale.getHeight()-h.button2.getWidth()/2:(e-h.minValue)/(h.maxValue-h.minValue)*h.scale.getWidth()-h.button2.getWidth()/2},this.butt1Move=function(e,t){h.isVertical?(h.button1.elem.style.top=e+"px",h.label1.elem.style.top=e-h.label1.getHeight()/2+h.button1.getWidth()/2+"px"):(h.button1.elem.style.left=e+"px",h.label1.elem.style.left=e-h.label1.getWidth()/2+h.button1.getWidth()/2+"px"),t<h.minValue&&(t=h.minValue),h.label1.elem.innerHTML=t+"",h.curMinValue=t,h.updateElems()},this.butt1OffsetCheck=function(e){var t;if(h.isVertical){var i=h.step*h.scale.getHeight()/(h.maxValue-h.minValue);e<-h.button2.getWidth()/2&&(e=-h.button2.getWidth()/2,t=h.minValue),i/1.5>h.button2.getWidth()?e>h.button2.getTop()-h.scale.getTop()-i/1.5&&(e=h.button2.getTop()-h.scale.getTop()-i/1.5):e>h.button2.getTop()-h.scale.getTop()-h.button2.getWidth()&&(e=h.button2.getTop()-h.scale.getTop()-h.button2.getWidth())}else i=h.step*h.scale.getWidth()/(h.maxValue-h.minValue),e<-h.button1.getWidth()/2&&(e=-h.button1.getWidth()/2,t=h.minValue),i/1.5>h.button1.getWidth()?e>h.button2.getLeft()-h.scale.getLeft()-i/1.5&&(e=h.button2.getLeft()-h.scale.getLeft()-i/1.5):e>h.button2.getLeft()-h.scale.getLeft()-h.button2.getWidth()&&(e=h.button2.getLeft()-h.scale.getLeft()-h.button2.getWidth());return[e,t]},this.onMouseMove1=function(e){var t,i,n,l,a;n=h.isVertical?e.clientY-h.scale.getTop()-h.button1.getWidth()/2:e.clientX-h.scale.getLeft()-h.button1.getWidth()/2,a=(t=h.butt1OffsetCheck(n))[0],(l=t[1])||(a=(i=h.roundOffsetButt(a))[0],l=i[1]),h.butt1Move(a,l)},this.onMouseUp1=function(e){document.removeEventListener("mouseup",h.onMouseUp1),document.removeEventListener("mousemove",h.onMouseMove1)},this.butt2Move=function(e,t){h.isVertical?(h.button2.elem.style.top=e+"px",h.label2.elem.style.top=e-h.label2.getHeight()/2+h.button2.getWidth()/2+"px"):(h.button2.elem.style.left=e+"px",h.label2.elem.style.left=e-h.label2.getWidth()/2+h.button2.getWidth()/2+"px"),t<h.minValue?t=h.minValue:t>h.maxValue&&(t=h.maxValue),h.label2.elem.innerHTML=t+"",h.curMaxValue=t,h.updateElems()},this.butt2OffsetCheck=function(e){var t;if(h.range||e<-h.button2.getWidth()/2&&(e=-h.button2.getWidth()/2,t=h.minValue),h.isVertical){var i=h.step*h.scale.getHeight()/(h.maxValue-h.minValue);e>h.scale.getHeight()-h.button2.getWidth()/2&&(e=h.scale.getHeight()-h.button2.getWidth()/2,t=h.maxValue),i/1.5>h.button2.getWidth()?e<h.button1.getTop()-h.scale.getTop()+i/1.5&&(e=h.button1.getTop()-h.scale.getTop()+i/1.5):e<h.button1.getTop()-h.scale.getTop()+h.button2.getWidth()&&(e=h.button1.getTop()-h.scale.getTop()+h.button2.getWidth())}else i=h.step*h.scale.getWidth()/(h.maxValue-h.minValue),e>h.scale.getWidth()-h.button2.getWidth()/2&&(e=h.scale.getWidth()-h.button2.getWidth()/2,t=h.maxValue),i/1.5>h.button2.getWidth()?e<h.button1.getLeft()-h.scale.getLeft()+i/1.5&&(e=h.button1.getLeft()-h.scale.getLeft()+i/1.5):e<h.button1.getLeft()-h.scale.getLeft()+h.button2.getWidth()&&(e=h.button1.getLeft()-h.scale.getLeft()+h.button2.getWidth());return[e,t]},this.onMouseMove2=function(e){var t,i,n,l,a;n=h.isVertical?e.clientY-h.scale.getTop()-h.button2.getWidth()/2:e.clientX-h.scale.getLeft()-h.button2.getWidth()/2,a=(t=h.butt2OffsetCheck(n))[0],(l=t[1])||(a=(i=h.roundOffsetButt(a))[0],l=i[1]),h.butt2Move(a,l)},this.onMouseUp2=function(e){document.removeEventListener("mouseup",h.onMouseUp2),document.removeEventListener("mousemove",h.onMouseMove2)},this.scaleOnclick=function(e){h.range&&(h.isVertical?Math.abs(e.clientY-h.button1.getTop()-h.button1.getWidth()/2)<Math.abs(e.clientY-h.button2.getTop()-h.button2.getWidth()/2):Math.abs(e.clientX-h.button1.getLeft()-h.button1.getWidth()/2)<Math.abs(e.clientX-h.button2.getLeft()-h.button2.getWidth()/2))?h.onMouseMove1(e):h.onMouseMove2(e)},this.interMarkHandler=function(e){var t,i,n,l;if(h.isVertical){var a=(e-h.minValue)/(h.maxValue-h.minValue)*h.scale.getHeight();n=(t=h.roundOffsetButt(a-h.button2.getWidth()/2))[0],l=t[1],h.range&&Math.abs(a+h.scale.getTop()-h.button1.getTop()-h.button2.getWidth()/2)<Math.abs(a+h.scale.getTop()-h.button2.getTop()-h.button2.getWidth()/2)?h.butt1Move(n,l):h.butt2Move(n,l)}else a=(e-h.minValue)/(h.maxValue-h.minValue)*h.scale.getWidth(),n=(i=h.roundOffsetButt(a-h.button2.getWidth()/2))[0],l=i[1],h.range&&Math.abs(a+h.scale.getLeft()-h.button1.getLeft()-h.button2.getWidth()/2)<Math.abs(a+h.scale.getLeft()-h.button2.getLeft()-h.button2.getWidth()/2)?h.butt1Move(n,l):h.butt2Move(n,l)},this.mark1Onclick=function(e){var t=-h.button2.getWidth()/2,i=h.minValue;h.range?h.butt1Move(t,i):h.butt2Move(t,i)},this.mark4Onclick=function(e){if(h.isVertical){var t=h.scale.getHeight()-h.button2.getWidth()/2,i=h.maxValue;h.butt2Move(t,i)}else t=h.scale.getWidth()-h.button2.getWidth()/2,i=h.maxValue,h.butt2Move(t,i)},this.mark2Onclick=function(e){var t=h.float?parseFloat(h.graduation.mark2.innerHTML):parseInt(h.graduation.mark2.innerHTML);h.interMarkHandler(t)},this.mark3Onclick=function(e){var t=h.float?parseFloat(h.graduation.mark3.innerHTML):parseInt(h.graduation.mark3.innerHTML);h.interMarkHandler(t)},this.checkValues=function(){"number"!=typeof h.maxValue&&console.error("Maxvalue should be a number"),"number"!=typeof h.minValue&&console.error("Maxvalue should be a number"),"number"!=typeof h.step&&console.error("Step should be a number"),"boolean"!=typeof h.range&&console.error("Range should be a boolean"),"boolean"!=typeof h.isVertical&&console.error("isVertical should be a boolean"),"boolean"!=typeof h.showLabel&&console.error("ShowLabel should be a boolean"),h.step>h.maxValue-h.minValue&&(h.step=h.maxValue-h.minValue,console.error("Step is setted to the max"))},this.init=function(){h.button1.elem.style.display="none",h.label1.elem.style.display="none",h.graduation.init(h.minValue,h.maxValue,h.isVertical,h.float),h.checkValues(),h.showLabel?(h.label1.elem.style.display="block",h.label2.elem.style.display="block"):(h.label1.elem.style.display="none",h.label2.elem.style.display="none"),h.range?h.button1.elem.style.display="block":(h.button1.elem.style.display="none",h.label1.elem.style.display="none"),h.isVertical?(h.scale.elem.classList.add("slider__scale_vertical"),h.scaleFilling.elem.classList.add("slider__scale-filling_vertical"),h.graduation.gradElem.classList.add("slider__graduation_vertical"),h.graduation.gradElem.style.height=h.scale.getHeight()+"px",h.button1.elem.classList.add("slider__button_vertical"),h.button2.elem.classList.add("slider__button_vertical"),h.label1.elem.classList.add("slider__button-label_vertical"),h.label2.elem.classList.add("slider__button-label_vertical"),h.button1.elem.style.top=-h.button1.getWidth()/2+"px",h.button1.elem.style.left="50%",h.button2.elem.style.top=h.scale.getHeight()-h.button2.getWidth()/2+"px",h.button2.elem.style.left="50%",h.label1.elem.innerHTML=h.minValue+"",h.label2.elem.innerHTML=h.maxValue+"",h.label1.elem.style.top=h.getStart()-h.label1.getHeight()/2+"px",h.label1.elem.style.left="50%",h.label2.elem.style.top=h.getEnd()-h.label2.getHeight()/2+"px",h.label2.elem.style.left="50%"):(h.scale.elem.classList.remove("slider__scale_vertical"),h.scaleFilling.elem.classList.remove("slider__scale-filling_vertical"),h.graduation.gradElem.classList.remove("slider__graduation_vertical"),h.graduation.gradElem.style.height="20px",h.button1.elem.classList.remove("slider__button_vertical"),h.button2.elem.classList.remove("slider__button_vertical"),h.label1.elem.classList.remove("slider__button-label_vertical"),h.label2.elem.classList.remove("slider__button-label_vertical"),h.button1.elem.style.left=-h.button1.getWidth()/2+"px",h.button1.elem.style.top="50%",h.button2.elem.style.left=h.scale.getWidth()-h.button2.getWidth()/2+"px",h.button2.elem.style.top="50%",h.label1.elem.innerHTML=h.minValue+"",h.label2.elem.innerHTML=h.maxValue+"",h.label1.elem.style.left=h.getStart()-h.label1.getWidth()/2+"px",h.label1.elem.style.top="50%",h.label2.elem.style.left=h.getEnd()-h.label2.getWidth()/2+"px",h.label2.elem.style.top="50%"),h.updateElems()},this.append=function(e){e.appendChild(h.scale.elem).appendChild(h.scaleFilling.elem),e.appendChild(h.button1.elem),e.appendChild(h.label1.elem),e.appendChild(h.graduation.gradElem),e.appendChild(h.button2.elem),e.appendChild(h.label2.elem),h.scale.elem.onclick=h.scaleOnclick,h.graduation.mark1.onclick=h.mark1Onclick,h.graduation.mark2.onclick=h.mark2Onclick,h.graduation.mark3.onclick=h.mark3Onclick,h.graduation.mark4.onclick=h.mark4Onclick,h.button1.elem.onmousedown=function(e){e.preventDefault(),document.addEventListener("mousemove",h.onMouseMove1),document.addEventListener("mouseup",h.onMouseUp1)},h.button2.elem.onmousedown=function(e){e.preventDefault(),document.addEventListener("mousemove",h.onMouseMove2),document.addEventListener("mouseup",h.onMouseUp2)}},this.scale=new o,this.button1=new r,this.button2=new r,this.label1=new u,this.label2=new u,this.scaleFilling=new c,this.graduation=new s,this.minValue=e,this.maxValue=t,this.curMinValue=e,this.curMaxValue=t,this.step=i,this.range=n,this.isVertical=a,this.showLabel=d,this.float=g,this.observers=new l,this.checkValues()},g=function(){function e(e,t){void 0===e&&(e=0),void 0===t&&(t=1e3),this.curMinValue=e,this.curMaxValue=t,this.observers=new l}return e.prototype.setCurMinValue=function(e){this.curMinValue!=e&&(this.curMinValue=e,this.observers.notifyObservers())},e.prototype.setCurMaxValue=function(e){this.curMaxValue!=e&&(this.curMaxValue=e,this.observers.notifyObservers())},e}(),h=function(e,t,i,n,a,o,s){var r=this;void 0===e&&(e=0),void 0===t&&(t=1e3),void 0===i&&(i=1),void 0===n&&(n=!1),void 0===a&&(a=!1),void 0===o&&(o=!1),void 0===s&&(s=!1),this.append=function(e){r.view.append(e.get(0)),r.view.init()},this.update=function(e){Object.keys(e).map((function(t){void 0!==r.view[t]&&(r.view[t]=e[t])})),r.view.init(),r.view.butt1Move(r.view.butt1OffsetCheck(r.view.offsetValueConv(r.model.curMinValue))[0],r.model.curMinValue),r.view.butt2Move(r.view.butt2OffsetCheck(r.view.offsetValueConv(r.model.curMaxValue))[0],r.model.curMaxValue)},this.getValues=function(){return[r.model.curMinValue,r.model.curMaxValue]},this.setValues=function(e,t){e&&r.model.setCurMinValue(e),t&&r.model.setCurMaxValue(t)},this.getConfig=function(){return{minValue:r.view.minValue,maxValue:r.view.maxValue,step:r.view.step,range:r.view.range,isVertical:r.view.isVertical,showLabel:r.view.showLabel,float:r.view.float}},this.addObserver=function(e){r.observers.addObserver(e)},this.view=new d(e,t,i,n,a,o,s),this.model=new g(e,t),this.observers=new l,this.view.observers.addObserver((function(){r.model.curMinValue=r.view.curMinValue,r.model.curMaxValue=r.view.curMaxValue,r.observers.notifyObservers()})),this.model.observers.addObserver((function(){var e=r.model.curMinValue,t=r.model.curMaxValue;r.view.butt1Move(r.view.offsetValueConv(e),e),r.view.butt2Move(r.view.offsetValueConv(t),t),r.observers.notifyObservers()}))};!function(e){const t={minValue:0,maxValue:1e3,step:1,range:!1,isVertical:!1,showLabel:!1,float:!1},i={init:function(i){if(!e(this).data("slider")){const n=JSON.parse(JSON.stringify(t)),l=new h(...Object.values(e.extend(n,i)));e(this).data("slider",l),l.append(e(this))}},update:function(t){e(this).data("slider").update(t)},getConfig:function(){return e(this).data("slider").getConfig()},setValues:function(t){e(this).data("slider").setValues(t.curMinValue,t.curMaxValue)},inputsAttach:function(t){const i=e(this).data("slider");i.addObserver(()=>{t.minValueIn.val(i.getValues()[0]),t.maxValueIn.val(i.getValues()[1])})}};e.fn.omfgslider=function(t){return i[t]?i[t].apply(this,Array.prototype.slice.call(arguments,1)):"object"!=typeof t&&t?void e.error('Метод "'+t+'" не найден в плагине jQuery.mySimplePlugin'):i.init.apply(this,arguments)}}(jQuery)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,