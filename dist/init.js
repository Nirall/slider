!function(e){var a={};function t(n){if(a[n])return a[n].exports;var l=a[n]={i:n,l:!1,exports:{}};return e[n].call(l.exports,l,l.exports,t),l.l=!0,l.exports}t.m=e,t.c=a,t.d=function(e,a,n){t.o(e,a)||Object.defineProperty(e,a,{enumerable:!0,get:n})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,a){if(1&a&&(e=t(e)),8&a)return e;if(4&a&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(t.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&a&&"string"!=typeof e)for(var l in e)t.d(n,l,function(a){return e[a]}.bind(null,l));return n},t.n=function(e){var a=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(a,"a",a),a},t.o=function(e,a){return Object.prototype.hasOwnProperty.call(e,a)},t.p="",t(t.s=18)}({18:function(e,a){const t=e=>{const a=e.data.elementName;$(""+a).omfgslider("getConfig").isFloat?$(""+a).omfgslider("setValues",{currentMinValue:parseFloat(e.data.inputElement.val())}):$(""+a).omfgslider("setValues",{currentMinValue:parseInt(e.data.inputElement.val(),10)})},n=e=>{const a=e.data.elementName;$(""+a).omfgslider("getConfig").isFloat?$(""+a).omfgslider("setValues",{currentMaxValue:parseFloat(e.data.inputElement.val())}):$(""+a).omfgslider("setValues",{currentMaxValue:parseInt(e.data.inputElement.val(),10)})},l=e=>{const a=e.data.elementName;$(""+a).omfgslider("update",{minValue:$(a+" + .input-wrapper .minValue").val()})},r=e=>{const a=e.data.elementName;$(""+a).omfgslider("update",{maxValue:$(a+" + .input-wrapper .maxValue").val()})},u=e=>{const a=e.data.elementName;$(""+a).omfgslider("update",{step:$(a+" + .input-wrapper .step").val()})},i=e=>{const a=e.data.elementName;!1===$(""+a).omfgslider("getConfig").isRange?$(""+a).omfgslider("update",{isRange:!0}):$(""+a).omfgslider("update",{isRange:!1})},o=e=>{const a=e.data.elementName;!1===$(""+a).omfgslider("getConfig").isVertical?$(""+a).omfgslider("update",{isVertical:!0}):$(""+a).omfgslider("update",{isVertical:!1})},s=e=>{const a=e.data.elementName;!1===$(""+a).omfgslider("getConfig").showLabel?$(""+a).omfgslider("update",{showLabel:!0}):$(""+a).omfgslider("update",{showLabel:!1})};$("#s1").omfgslider({showLabel:!0}),$("#s2").omfgslider({minValue:-1e3,maxValue:0,step:100,isRange:!0,showLabel:!0}),$("#s3").omfgslider({minValue:0,maxValue:1,step:.05,isVertical:!0,showLabel:!0,isFloat:!0}),$("#s4").omfgslider({minValue:-3,maxValue:0,step:.1,isRange:!0,isVertical:!0,showLabel:!0,isFloat:!0}),["#s1","#s2","#s3","#s4"].forEach(e=>{const a=$(""+e).omfgslider("getConfig"),m=$(e+" + .input-wrapper .minValueIn"),p=$(e+" + .input-wrapper .maxValueIn"),f=$(e+" + .input-wrapper .minValue"),d=$(e+" + .input-wrapper .maxValue"),c=$(e+" + .input-wrapper .step");m.val(a.minValue),p.val(a.maxValue),$(e+" + .input-wrapper .minValue").val(a.minValue),$(e+" + .input-wrapper .maxValue").val(a.maxValue),$(e+" + .input-wrapper .step").val(a.step),$(""+e).omfgslider("inputsAttach",{minValueInput:m,maxValueInput:p,maxValue:d,minValue:f,step:c}),m.on("focusout",{elementName:e,inputElement:m},t),p.on("focusout",{elementName:e,inputElement:p},n),f.on("focusout",{elementName:e},l),d.on("focusout",{elementName:e},r),c.on("focusout",{elementName:e},u),$(e+' + .input-wrapper input[name = "range"]').on("change",{elementName:e},i),$(e+' + .input-wrapper input[name = "vertical"]').on("change",{elementName:e},o),$(e+' + .input-wrapper input[name = "showLabel"]').on("change",{elementName:e},s)})}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,